openapi: 3.0.1
info:
  title: OH 2.0 Api Documentation
  description: OH 2.0 Api Documentation
  contact:
    name: ApiInfo.DEFAULT_CONTACT
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  version: "1.0"
servers:
- url: http://localhost:8080
security:
- bearerAuth: []
paths:
  /wards:
    get:
      tags:
      - Wards
      operationId: getWards
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WardDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Wards
      operationId: updateWard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WardDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WardDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Wards
      operationId: newWard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WardDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WardDTO'
      security:
      - bearerAuth: []
  /visit/{visitID}:
    put:
      tags:
      - Visit
      operationId: updateVisit
      parameters:
      - name: visitID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitDTO'
      security:
      - bearerAuth: []
  /vaccinetype:
    get:
      tags:
      - Vaccine Type
      operationId: getVaccineType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccineTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Vaccine Type
      operationId: updateVaccineType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Vaccine Type
      operationId: newVaccineType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineTypeDTO'
      security:
      - bearerAuth: []
  /vaccines:
    get:
      tags:
      - Vaccines
      operationId: getVaccines
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccineDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Vaccines
      operationId: updateVaccine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Vaccines
      operationId: newVaccine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccineDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccineDTO'
      security:
      - bearerAuth: []
  /users:
    get:
      tags:
      - Users
      operationId: getUser
      parameters:
      - name: group_id
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Users
      operationId: updateUser
      parameters:
      - name: password
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    post:
      tags:
      - Users
      operationId: newUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /users/groups:
    get:
      tags:
      - Users
      operationId: getUserGroup
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserGroupDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Users
      operationId: updateUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    post:
      tags:
      - Users
      operationId: newUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /suppliers:
    get:
      tags:
      - Suppliers
      operationId: getSuppliers
      parameters:
      - name: exclude_deleted
        in: query
        required: false
        schema:
          type: boolean
          default: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Suppliers
      operationId: updateSupplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Suppliers
      operationId: saveSupplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDTO'
      security:
      - bearerAuth: []
  /pricesothers/{id}:
    put:
      tags:
      - Others Price
      operationId: updatePricesOthers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricesOthersDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesOthersDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Others Price
      operationId: deletePricesOthers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pricelists/{id}:
    put:
      tags:
      - Price Lists
      operationId: updatePriceLists
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceListDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Price Lists
      operationId: deletePriceList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pregnanttreatmenttypes/{code}:
    put:
      tags:
      - Pregnant Treatment Types
      operationId: updatePregnantTreatmentTypes
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PregnantTreatmentTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PregnantTreatmentTypeDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Pregnant Treatment Types
      operationId: deletePregnantTreatmentType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /permissions/{id}:
    get:
      tags:
      - Permissions
      operationId: retrievePermissionById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Permissions
      operationId: updatePermission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Permissions
      operationId: deletePermission
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patientvaccines/{code}:
    put:
      tags:
      - Patient Vaccines
      operationId: updatePatientVaccinet
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientVaccineDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientVaccineDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Patient Vaccines
      operationId: deletePatientVaccine
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patients/{code}:
    get:
      tags:
      - Patients
      operationId: getPatient
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Patients
      operationId: updatePatient
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Patients
      operationId: deletePatient
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patientConsensus/{patientId}:
    get:
      tags:
      - Patient Consensus
      operationId: getPatientConsensus
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientConsensusDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Patient Consensus
      operationId: updatePatientConsensus
      parameters:
      - name: patientId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientConsensusDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientConsensusDTO'
      security:
      - bearerAuth: []
  /operationtypes/{code}:
    put:
      tags:
      - Operations Types
      operationId: updateOperationTypes
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTypeDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Operations Types
      operationId: deleteOperationType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /operations/{code}:
    get:
      tags:
      - Operations
      operationId: getOperationByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Operations
      operationId: updateOperation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Operations
      operationId: deleteOperation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /operations/rows:
    put:
      tags:
      - Operations
      operationId: updateOperationRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
    post:
      tags:
      - Operations
      operationId: newOperationRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationRowDTO'
      security:
      - bearerAuth: []
  /opds/{code}:
    put:
      tags:
      - Opds
      operationId: updateOpd
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpdDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpdDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Opds
      operationId: deleteOpd
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /opds/rows/{code}:
    put:
      tags:
      - Opds
      operationId: updateOpdWithOperationRow
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpdWithOperationRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpdWithOperationRowDTO'
      security:
      - bearerAuth: []
  /medstockmovementtype:
    get:
      tags:
      - Medical Stock Movement Type
      operationId: getMedicalDsrStockMovementType
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Medical Stock Movement Type
      operationId: updateMedicalDsrStockMovementType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Medical Stock Movement Type
      operationId: newMedicalDsrStockMovementType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementTypeDTO'
      security:
      - bearerAuth: []
  /medicaltypes:
    get:
      tags:
      - Medical Types
      operationId: getMedicalTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Medical Types
      operationId: updateMedicalType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Medical Types
      operationId: createMedicalType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalTypeDTO'
      security:
      - bearerAuth: []
  /medicals:
    get:
      tags:
      - Medicals
      operationId: getMedicals
      parameters:
      - name: sort_by
        in: query
        required: false
        schema:
          type: string
          enum:
          - NONE
          - CODE
          - NAME
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Medicals
      operationId: updateMedical
      parameters:
      - name: ignore_similar
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Medicals
      operationId: newMedical
      parameters:
      - name: ignore_similar
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicalDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDTO'
      security:
      - bearerAuth: []
  /malnutritions:
    put:
      tags:
      - Malnutritions
      operationId: updateMalnutrition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MalnutritionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalnutritionDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Malnutritions
      operationId: newMalnutrition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MalnutritionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalnutritionDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Malnutritions
      operationId: deleteMalnutrition
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/{code}:
    get:
      tags:
      - Laboratories
      operationId: getExamById
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LaboratoryDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Laboratories
      operationId: updateLaboratory
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabWithRowsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    delete:
      tags:
      - Laboratories
      operationId: deleteExam
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/examRequest/{code}:
    put:
      tags:
      - Laboratories
      operationId: updateExamRequest
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    delete:
      tags:
      - Laboratories
      operationId: deleteExamRequest
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /hospitals/{code}:
    put:
      tags:
      - Hospitals
      operationId: updateHospital
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HospitalDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalDTO'
      security:
      - bearerAuth: []
  /examtypes/{code}:
    put:
      tags:
      - Exam Types
      operationId: updateExamType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamTypeDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Exam Types
      operationId: deleteExamType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /exams/{code}:
    put:
      tags:
      - Exams
      operationId: updateExams
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Exams
      operationId: deleteExam_1
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /examinations/{id}:
    get:
      tags:
      - Examinations
      operationId: getByID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientExaminationDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Examinations
      operationId: updateExamination
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientExaminationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /diseasetypes:
    get:
      tags:
      - Disease Types
      operationId: getAllDiseaseTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Disease Types
      operationId: updateDiseaseType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Disease Types
      operationId: newDiseaseType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseTypeDTO'
      security:
      - bearerAuth: []
  /diseases:
    put:
      tags:
      - Diseases
      operationId: updateDisease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Diseases
      operationId: newDisease
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiseaseDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /dischargetypes:
    get:
      tags:
      - DischargeType
      operationId: getDischargeTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DischargeTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - DischargeType
      operationId: updateDischargeTypet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DischargeTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DischargeTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - DischargeType
      operationId: newDischargeType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DischargeTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DischargeTypeDTO'
      security:
      - bearerAuth: []
  /deliverytypes:
    get:
      tags:
      - Delivery Type
      operationId: getDeliveryTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Delivery Type
      operationId: updateDeliveryTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Delivery Type
      operationId: newDeliveryType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryTypeDTO'
      security:
      - bearerAuth: []
  /deliveryresulttypes:
    get:
      tags:
      - Delivery Result Type
      operationId: getDeliveryResultTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryResultTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Delivery Result Type
      operationId: updateDeliveryResultTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryResultTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryResultTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Delivery Result Type
      operationId: newDeliveryResultType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryResultTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryResultTypeDTO'
      security:
      - bearerAuth: []
  /bills/{id}:
    get:
      tags:
      - Bills
      operationId: getBill
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Bills
      operationId: updateBill
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullBillDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullBillDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Bills
      operationId: deleteBill
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /agetypes:
    get:
      tags:
      - AgeTypes
      operationId: getAllAgeTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AgeTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - AgeTypes
      operationId: updateAgeType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgeTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeTypeDTO'
      security:
      - bearerAuth: []
  /admissiontypes:
    get:
      tags:
      - AdmissionTypes
      operationId: getAdmissionTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdmissionTypeDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - AdmissionTypes
      operationId: updateAdmissionTypes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdmissionTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - AdmissionTypes
      operationId: newAdmissionType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdmissionTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionTypeDTO'
      security:
      - bearerAuth: []
  /admissions:
    get:
      tags:
      - Admissions
      operationId: getAdmissions
      parameters:
      - name: admissionrange
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAdmissionDTO'
      security:
      - bearerAuth: []
    put:
      tags:
      - Admissions
      operationId: updateAdmissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdmissionDTO'
        required: true
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Admissions
      operationId: newAdmissions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdmissionDTO'
        required: true
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionDTO'
      security:
      - bearerAuth: []
  /visits:
    post:
      tags:
      - Visit
      operationId: newVisits
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/VisitDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /visit:
    post:
      tags:
      - Visit
      operationId: newVisit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitDTO'
      security:
      - bearerAuth: []
  /usersettings:
    post:
      tags:
      - Users
      operationId: newUserSetting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettingDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingDTO'
      security:
      - bearerAuth: []
  /users/groups/{group_code}:
    post:
      tags:
      - Users
      operationId: setGroupMenu
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserMenuItemDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
    delete:
      tags:
      - Users
      operationId: deleteGroup
      parameters:
      - name: group_code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /therapies:
    post:
      tags:
      - Therapies
      operationId: newTherapy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TherapyRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TherapyRowDTO'
      security:
      - bearerAuth: []
  /therapies/replace:
    post:
      tags:
      - Therapies
      operationId: replaceTherapies
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TherapyRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TherapyRow'
      security:
      - bearerAuth: []
  /therapies/meds-out-of-stock:
    post:
      tags:
      - Therapies
      operationId: getMedicalsOutOfStock
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TherapyDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalDTO'
      security:
      - bearerAuth: []
  /therapies/from-rows:
    post:
      tags:
      - Therapies
      operationId: getTherapies
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TherapyRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TherapyDTO'
      security:
      - bearerAuth: []
  /therapies/from-row:
    post:
      tags:
      - Therapies
      operationId: getTherapy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TherapyRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TherapyDTO'
      security:
      - bearerAuth: []
  /stockmovements/discharge:
    post:
      tags:
      - Stock Movements
      operationId: newMultipleDischargingMovements
      parameters:
      - name: ref
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MovementDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /stockmovements/charge:
    post:
      tags:
      - Stock Movements
      operationId: newMultipleChargingMovements
      parameters:
      - name: ref
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MovementDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /sms:
    get:
      tags:
      - SMS
      operationId: getAll
      parameters:
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SmsDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - SMS
      operationId: saveSms
      parameters:
      - name: split
        in: query
        required: false
        schema:
          type: boolean
          default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SmsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /sms/delete:
    post:
      tags:
      - SMS
      operationId: deleteSms
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/SmsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pricesothers:
    get:
      tags:
      - Others Price
      operationId: getPricesOthers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PricesOthersDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Others Price
      operationId: newPricesOthers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PricesOthersDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricesOthersDTO'
      security:
      - bearerAuth: []
  /pricelists:
    get:
      tags:
      - Price Lists
      operationId: getPriceLists
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceListDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Price Lists
      operationId: newPriceList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PriceListDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PriceListDTO'
      security:
      - bearerAuth: []
  /pregnanttreatmenttypes:
    get:
      tags:
      - Pregnant Treatment Types
      operationId: getPregnantTreatmentTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PregnantTreatmentTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Pregnant Treatment Types
      operationId: newPregnantTreatmentType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PregnantTreatmentTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PregnantTreatmentTypeDTO'
      security:
      - bearerAuth: []
  /permissions:
    get:
      tags:
      - Permissions
      operationId: retrieveAllPermissions
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Permissions
      operationId: insertPermission
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
      security:
      - bearerAuth: []
  /patientvaccines:
    post:
      tags:
      - Patient Vaccines
      operationId: newPatientVaccine
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientVaccineDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientVaccineDTO'
      security:
      - bearerAuth: []
  /patients:
    get:
      tags:
      - Patients
      operationId: getPatients
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePatientDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Patients
      operationId: newPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
      security:
      - bearerAuth: []
  /operationtypes:
    get:
      tags:
      - Operations Types
      operationId: getOperationTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Operations Types
      operationId: newOperationType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationTypeDTO'
      security:
      - bearerAuth: []
  /operations:
    get:
      tags:
      - Operations
      operationId: getOperations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Operations
      operationId: newOperation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationDTO'
      security:
      - bearerAuth: []
  /operations/rows/search/opd:
    post:
      tags:
      - Operations
      operationId: getOperationRowsByOpd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpdDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationRowDTO'
      security:
      - bearerAuth: []
  /opds:
    post:
      tags:
      - Opds
      operationId: newOpd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpdDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpdDTO'
      security:
      - bearerAuth: []
  /opds/rows:
    post:
      tags:
      - Opds
      operationId: newOpdWithOperationRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpdWithOperationRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpdWithOperationRowDTO'
      security:
      - bearerAuth: []
  /medicalstockward/movements:
    post:
      tags:
      - Medical Stock Ward
      operationId: newMovementWard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovementWardDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories:
    get:
      tags:
      - Laboratories
      operationId: getLaboratory
      parameters:
      - name: oneWeek
        in: query
        required: true
        schema:
          type: boolean
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLabWithRowsDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Laboratories
      operationId: newLaboratory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabWithRowsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/insertList:
    post:
      tags:
      - Laboratories
      operationId: newLaboratory2
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LabWithRowsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /laboratories/examRequest:
    get:
      tags:
      - Laboratories
      operationId: getLaboratoryExamRequest
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LaboratoryDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Laboratories
      operationId: newExamRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaboratoryDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /examtypes:
    get:
      tags:
      - Exam Types
      operationId: getExamTypes
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamTypeDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Exam Types
      operationId: newExamType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamTypeDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamTypeDTO'
      security:
      - bearerAuth: []
  /exams:
    get:
      tags:
      - Exams
      operationId: getExams
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Exams
      operationId: newExam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDTO'
      security:
      - bearerAuth: []
  /examrows:
    get:
      tags:
      - Exam Rows
      operationId: getExamRows
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamRowDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Exam Rows
      operationId: newExamRow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExamRowDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamRowDTO'
      security:
      - bearerAuth: []
  /examinations:
    post:
      tags:
      - Examinations
      operationId: newPatientExamination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientExaminationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /bills:
    get:
      tags:
      - Bills
      operationId: searchBills_1
      parameters:
      - name: datefrom
        in: query
        required: true
        schema:
          type: string
      - name: dateto
        in: query
        required: true
        schema:
          type: string
      - name: patient_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillDTO'
      security:
      - bearerAuth: []
    post:
      tags:
      - Bills
      operationId: newBill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullBillDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullBillDTO'
      security:
      - bearerAuth: []
  /bills/search/by/payments:
    post:
      tags:
      - Bills
      operationId: searchBillsByPayments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BillPaymentsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillDTO'
      security:
      - bearerAuth: []
  /bills/search/by/item:
    post:
      tags:
      - Bills
      operationId: searchBills
      parameters:
      - name: datefrom
        in: query
        required: true
        schema:
          type: string
      - name: dateto
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillItemsDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillDTO'
      security:
      - bearerAuth: []
  /auth/logout:
    post:
      tags:
      - Login
      description: Logout the current user.
      operationId: logout
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      tags:
      - Login
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      security:
      - bearerAuth: []
  /admissions/discharge:
    post:
      tags:
      - Admissions
      operationId: dischargePatient
      parameters:
      - name: patientCode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdmissionDTO'
        required: true
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /wardsNoMaternity:
    get:
      tags:
      - Wards
      operationId: getWardsNoMaternity
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WardDTO'
      security:
      - bearerAuth: []
  /wards/occupation/{code}:
    get:
      tags:
      - Wards
      operationId: getCurrentOccupation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /wards/check/{code}:
    get:
      tags:
      - Wards
      operationId: checkWardCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /wards/check/maternity/{createIfNotExist}:
    get:
      tags:
      - Wards
      operationId: checkWardMaternityCode
      parameters:
      - name: createIfNotExist
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /visit/patient/{patID}:
    get:
      tags:
      - Visit
      operationId: getVisit
      parameters:
      - name: patID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VisitDTO'
      security:
      - bearerAuth: []
  /vaccinetype/check/{code}:
    get:
      tags:
      - Vaccine Type
      operationId: checkVaccineTypeCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /vaccines/type-code/{vaccineTypeCode}:
    get:
      tags:
      - Vaccines
      operationId: getVaccinesByVaccineTypeCode
      parameters:
      - name: vaccineTypeCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccineDTO'
      security:
      - bearerAuth: []
  /vaccines/check/{code}:
    get:
      tags:
      - Vaccines
      operationId: checkVaccineCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /usersettings/dashboard:
    get:
      tags:
      - Users
      operationId: getUserSettingDashboard
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettingDTO'
      security:
      - bearerAuth: []
  /users/{username}:
    get:
      tags:
      - Users
      operationId: getUserByName
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Users
      operationId: deleteUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /users/permissions:
    get:
      tags:
      - Users
      operationId: retrievePermissionsByCurrentLoggedInUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LitePermissionDTO'
      security:
      - bearerAuth: []
  /users/permissions/username/{username}:
    get:
      tags:
      - Users
      operationId: retrievePermissionsByUsername
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LitePermissionDTO'
      security:
      - bearerAuth: []
  /users/me:
    get:
      tags:
      - Users
      operationId: retrieveProfileByCurrentLoggedInUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileDTO'
      security:
      - bearerAuth: []
  /therapies/{code_patient}:
    get:
      tags:
      - Therapies
      operationId: getTherapyRows
      parameters:
      - name: code_patient
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TherapyRowDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Therapies
      operationId: deleteAllTherapies
      parameters:
      - name: code_patient
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /suppliers/{id}:
    get:
      tags:
      - Suppliers
      operationId: getSuppliers_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierDTO'
      security:
      - bearerAuth: []
  /stockmovements:
    get:
      tags:
      - Stock Movements
      operationId: getMovements
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementDTO'
      security:
      - bearerAuth: []
  /stockmovements/{ref}:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_1
      parameters:
      - name: ref
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementDTO'
      security:
      - bearerAuth: []
  /stockmovements/lot/{med_code}:
    get:
      tags:
      - Stock Movements
      operationId: getLotByMedical
      parameters:
      - name: med_code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LotDTO'
      security:
      - bearerAuth: []
  /stockmovements/filter/v2:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_2
      parameters:
      - name: med_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: med_type
        in: query
        required: false
        schema:
          type: string
      - name: ward_id
        in: query
        required: false
        schema:
          type: string
      - name: mov_type
        in: query
        required: false
        schema:
          type: string
      - name: mov_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: mov_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_prep_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_prep_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_due_from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: lot_due_to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementDTO'
      security:
      - bearerAuth: []
  /stockmovements/filter/v1:
    get:
      tags:
      - Stock Movements
      operationId: getMovements_3
      parameters:
      - name: ward_id
        in: query
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementDTO'
      security:
      - bearerAuth: []
  /stockmovements/critical/check:
    get:
      tags:
      - Stock Movements
      operationId: alertCriticalQuantity
      parameters:
      - name: med_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: qty
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /reports/exams-list:
    get:
      tags:
      - Reports
      operationId: printExamsListPdf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
      - bearerAuth: []
  /reports/diseases-list:
    get:
      tags:
      - Reports
      operationId: printDiseasesListPdf
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
      security:
      - bearerAuth: []
  /pricelists/prices:
    get:
      tags:
      - Price Lists
      operationId: getPrices
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PriceDTO'
      security:
      - bearerAuth: []
  /pricelists/duplicate/{id}:
    get:
      tags:
      - Price Lists
      operationId: copyList
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /pricelists/duplicate/byfactor/{id}:
    get:
      tags:
      - Price Lists
      operationId: copyByFactorAndStep
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: factor
        in: query
        required: true
        schema:
          type: number
          format: double
      - name: step
        in: query
        required: true
        schema:
          type: number
          format: double
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /permissions/userGroupCode/{userGroupCode}:
    get:
      tags:
      - Permissions
      operationId: retrievePermissionsByUserGroupcode
      parameters:
      - name: userGroupCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PermissionDTO'
      security:
      - bearerAuth: []
  /permissions/name/{name}:
    get:
      tags:
      - Permissions
      operationId: retrievePermissionByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
      security:
      - bearerAuth: []
  /patientvaccines/week:
    get:
      tags:
      - Patient Vaccines
      operationId: getPatientVaccines
      parameters:
      - name: oneWeek
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientVaccineDTO'
      security:
      - bearerAuth: []
  /patientvaccines/progyear/{year}:
    get:
      tags:
      - Patient Vaccines
      operationId: getProgYear
      parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /patientvaccines/filter:
    get:
      tags:
      - Patient Vaccines
      operationId: getPatientVaccinesByDatesRanges
      parameters:
      - name: vaccineTypeCode
        in: query
        required: true
        schema:
          type: string
      - name: vaccineCode
        in: query
        required: true
        schema:
          type: string
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: sex
        in: query
        required: true
        schema:
          type: string
      - name: ageFrom
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: ageTo
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientVaccineDTO'
      security:
      - bearerAuth: []
  /patients/search:
    get:
      tags:
      - Patients
      operationId: searchPatient
      parameters:
      - name: firstName
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: secondName
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: birthDate
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: address
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientDTO'
      security:
      - bearerAuth: []
  /patients/nextcode:
    get:
      tags:
      - Patients
      operationId: getPatientNextCode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /patients/merge:
    get:
      tags:
      - Patients
      operationId: mergePatients
      parameters:
      - name: mergedcode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: code2
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /patients/cities:
    get:
      tags:
      - Patients
      operationId: getPatientCities
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - bearerAuth: []
  /patients/all:
    get:
      tags:
      - Patients
      operationId: getPatientAll
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
      security:
      - bearerAuth: []
  /operations/search/type:
    get:
      tags:
      - Operations
      operationId: getOperationByTypeDescription
      parameters:
      - name: typeDescription
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationDTO'
      security:
      - bearerAuth: []
  /operations/rows/search/patient:
    get:
      tags:
      - Operations
      operationId: getOperationRowsByPatient
      parameters:
      - name: patientCode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationRowDTO'
      security:
      - bearerAuth: []
  /operations/rows/search/admission:
    get:
      tags:
      - Operations
      operationId: getOperationRowsByAdmt
      parameters:
      - name: admissionId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OperationRowDTO'
      security:
      - bearerAuth: []
  /opds/weekly:
    get:
      tags:
      - Opds
      operationId: getOpdToDayOrWeek
      parameters:
      - name: oneWeek
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpdDTO'
      security:
      - bearerAuth: []
  /opds/search:
    get:
      tags:
      - Opds
      operationId: getOpdByDates
      parameters:
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
      - name: diseaseTypeCode
        in: query
        required: false
        schema:
          type: string
      - name: diseaseCode
        in: query
        required: false
        schema:
          type: string
      - name: ageFrom
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: ageTo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 200
      - name: sex
        in: query
        required: false
        schema:
          type: string
          default: A
      - name: newPatient
        in: query
        required: false
        schema:
          type: string
          default: A
      - name: patientCode
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: wardCode
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOpdDTO'
      security:
      - bearerAuth: []
  /opds/patient/{pcode}:
    get:
      tags:
      - Opds
      operationId: getOpdByPatient
      parameters:
      - name: pcode
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpdWithOperationRowDTO'
      security:
      - bearerAuth: []
  /opds/last/{patientCode}:
    get:
      tags:
      - Opds
      operationId: getLastOpd
      parameters:
      - name: patientCode
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpdDTO'
      security:
      - bearerAuth: []
  /opds/check/progyear:
    get:
      tags:
      - Opds
      operationId: isExistOpdNum
      parameters:
      - name: opdNum
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: year
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /opds/ProgYear/{year}:
    get:
      tags:
      - Opds
      operationId: getProgYear_1
      parameters:
      - name: year
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /medstockmovementtype/{code}:
    get:
      tags:
      - Medical Stock Movement Type
      operationId: getMovementType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MovementTypeDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Medical Stock Movement Type
      operationId: deleteMedicalDsrStockMovementType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medstockmovementtype/check/{code}:
    get:
      tags:
      - Medical Stock Movement Type
      operationId: isCodeUsed
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicaltypes/check/{code}:
    get:
      tags:
      - Medical Types
      operationId: isCodeUsed_1
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicalstockward/{ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getMedicalsWard
      parameters:
      - name: ward_code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalWardDTO'
      security:
      - bearerAuth: []
  /medicalstockward/movements/{ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getMovementWard
      parameters:
      - name: ward_code
        in: path
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementWardDTO'
      security:
      - bearerAuth: []
  /medicalstockward/movements/to/{target_ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getWardMovementsToWard
      parameters:
      - name: target_ward_code
        in: path
        required: true
        schema:
          type: string
      - name: from
        in: query
        required: true
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: true
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MovementWardDTO'
      security:
      - bearerAuth: []
  /medicalstockward/current/{ward_code}:
    get:
      tags:
      - Medical Stock Ward
      operationId: getCurrentQuantityInWard
      parameters:
      - name: ward_code
        in: path
        required: true
        schema:
          type: string
      - name: med_id
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /medicals/{code}:
    get:
      tags:
      - Medicals
      operationId: getMedical
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicalDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Medicals
      operationId: deleteMedical
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicals/filter:
    get:
      tags:
      - Medicals
      operationId: filterMedicals
      parameters:
      - name: desc
        in: query
        required: false
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
      - name: critical
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: name_sorted
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MedicalDTO'
      security:
      - bearerAuth: []
  /malnutritions/{id_admission}:
    get:
      tags:
      - Malnutritions
      operationId: getMalnutrition
      parameters:
      - name: id_admission
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MalnutritionDTO'
      security:
      - bearerAuth: []
  /malnutritions/last/{id_patient}:
    get:
      tags:
      - Malnutritions
      operationId: getLastMalnutrition
      parameters:
      - name: id_patient
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalnutritionDTO'
      security:
      - bearerAuth: []
  /laboratories/materials:
    get:
      tags:
      - Laboratories
      operationId: getMaterials
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      security:
      - bearerAuth: []
  /laboratories/exams:
    get:
      tags:
      - Laboratories
      operationId: getLaboratoryForPrint
      parameters:
      - name: examName
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: dateFrom
        in: query
        required: true
        schema:
          type: string
      - name: dateTo
        in: query
        required: true
        schema:
          type: string
      - name: patientCode
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: status
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      - name: paged
        in: query
        required: false
        schema:
          type: boolean
          default: false
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageLabWithRowsDTO'
      security:
      - bearerAuth: []
  /laboratories/exams/{code}:
    get:
      tags:
      - Laboratories
      operationId: getExamWithRowsById
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabWithRowsDTO'
      security:
      - bearerAuth: []
  /laboratories/examRequest/patient/{patId}:
    get:
      tags:
      - Laboratories
      operationId: getLaboratoryExamRequest_1
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LaboratoryDTO'
      security:
      - bearerAuth: []
  /laboratories/byPatientId/{patId}:
    get:
      tags:
      - Laboratories
      operationId: getLaboratory_1
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabWithRowsDTO'
      security:
      - bearerAuth: []
  /hospitals:
    get:
      tags:
      - Hospitals
      operationId: getHospital
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HospitalDTO'
      security:
      - bearerAuth: []
  /hospitals/currencyCode:
    get:
      tags:
      - Hospitals
      operationId: getHospitalCurrencyCode
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
      security:
      - bearerAuth: []
  /exams/description/{description}:
    get:
      tags:
      - Exams
      operationId: getExams_1
      parameters:
      - name: description
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamDTO'
      security:
      - bearerAuth: []
  /examrows/{code}:
    get:
      tags:
      - Exam Rows
      operationId: getExamRowsByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamRowDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Exam Rows
      operationId: deleteExam_2
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /examrows/search:
    get:
      tags:
      - Exam Rows
      operationId: getExamRowsByCodeAndDescription
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: description
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamRowDTO'
      security:
      - bearerAuth: []
  /examrows/byExamCode/{examCode}:
    get:
      tags:
      - Exam Rows
      operationId: getExamRowsByExamCode
      parameters:
      - name: examCode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamRowDTO'
      security:
      - bearerAuth: []
  /examinations/lastNByPatId:
    get:
      tags:
      - Examinations
      operationId: getLastNByPatID
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: patId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagePatientExaminationDTO'
      security:
      - bearerAuth: []
  /examinations/lastByPatientId/{patId}:
    get:
      tags:
      - Examinations
      operationId: getLastByPatientId
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientExaminationDTO'
      security:
      - bearerAuth: []
  /examinations/fromLastPatientExamination/{id}:
    get:
      tags:
      - Examinations
      operationId: getFromLastPatientExamination
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientExaminationDTO'
      security:
      - bearerAuth: []
  /examinations/defaultPatientExamination:
    get:
      tags:
      - Examinations
      operationId: getDefaultPatientExamination
      parameters:
      - name: patId
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientExaminationDTO'
      security:
      - bearerAuth: []
  /examinations/byPatientId/{patId}:
    get:
      tags:
      - Examinations
      operationId: getByPatientId
      parameters:
      - name: patId
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientExaminationDTO'
      security:
      - bearerAuth: []
  /diseases/{code}:
    get:
      tags:
      - Diseases
      operationId: getDiseaseByCode
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
    delete:
      tags:
      - Diseases
      operationId: deleteDisease
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
      security:
      - bearerAuth: []
  /diseases/opd:
    get:
      tags:
      - Diseases
      operationId: getDiseasesOpd
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/opd/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseasesOpdByCode
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/ipd/out:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdOut
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/ipd/out/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdOutByCode
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/ipd/in:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdIn
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/ipd/in/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseasesIpdInByCode
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/both:
    get:
      tags:
      - Diseases
      operationId: getDiseases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/both/{typecode}:
    get:
      tags:
      - Diseases
      operationId: getDiseases_1
      parameters:
      - name: typecode
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /diseases/all:
    get:
      tags:
      - Diseases
      operationId: getAllDiseases
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiseaseDTO'
      security:
      - bearerAuth: []
  /discharges:
    get:
      tags:
      - Admissions
      operationId: getDischarges
      parameters:
      - name: dischargerange
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 80
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAdmissionDTO'
      security:
      - bearerAuth: []
  /bills/pending:
    get:
      tags:
      - Bills
      operationId: getPendingBills
      parameters:
      - name: patient_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillDTO'
      security:
      - bearerAuth: []
  /bills/pending/affiliate:
    get:
      tags:
      - Bills
      operationId: getPendingBillsAffiliate
      parameters:
      - name: patient_code
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillDTO'
      security:
      - bearerAuth: []
  /bills/payments:
    get:
      tags:
      - Bills
      operationId: searchBillsPayments
      parameters:
      - name: datefrom
        in: query
        required: true
        schema:
          type: string
      - name: dateto
        in: query
        required: true
        schema:
          type: string
      - name: patient_code
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillPaymentsDTO'
      security:
      - bearerAuth: []
  /bills/payments/{bill_id}:
    get:
      tags:
      - Bills
      operationId: getPaymentsByBillId
      parameters:
      - name: bill_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillPaymentsDTO'
      security:
      - bearerAuth: []
  /bills/items:
    get:
      tags:
      - Bills
      operationId: getDistinctItems
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillItemsDTO'
      security:
      - bearerAuth: []
  /bills/items/{bill_id}:
    get:
      tags:
      - Bills
      operationId: getItems
      parameters:
      - name: bill_id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BillItemsDTO'
      security:
      - bearerAuth: []
  /agetypes/{index}:
    get:
      tags:
      - AgeTypes
      operationId: getAgeTypeByIndex
      parameters:
      - name: index
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgeType'
      security:
      - bearerAuth: []
  /agetypes/code:
    get:
      tags:
      - AgeTypes
      operationId: getAgeTypeCodeByAge
      parameters:
      - name: age
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
      security:
      - bearerAuth: []
  /admissions/patient/{patientCode}:
    get:
      tags:
      - Admissions
      operationId: getAdmissions_1
      parameters:
      - name: patientCode
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdmissionDTO'
      security:
      - bearerAuth: []
  /admissions/getNextProgressiveIdInYear:
    get:
      tags:
      - Admissions
      operationId: getNextYProg
      parameters:
      - name: wardcode
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /admissions/getBedsOccupationInWard:
    get:
      tags:
      - Admissions
      operationId: getUsedWardBed
      parameters:
      - name: wardid
        in: query
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
      security:
      - bearerAuth: []
  /admissions/current:
    get:
      tags:
      - Admissions
      operationId: getCurrentAdmission
      parameters:
      - name: patientCode
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionDTO'
      security:
      - bearerAuth: []
  /admissions/admittedPatients:
    get:
      tags:
      - Admissions
      operationId: getAdmittedPatients
      parameters:
      - name: searchterms
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: admissionrange
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: dischargerange
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdmittedPatientDTO'
      security:
      - bearerAuth: []
  /wards/{code}:
    delete:
      tags:
      - Wards
      operationId: deleteWard
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /visit/delete/{patID}:
    delete:
      tags:
      - Visit
      operationId: deleteVisitsRelatedToPatient
      parameters:
      - name: patID
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /vaccinetype/{code}:
    delete:
      tags:
      - Vaccine Type
      operationId: deleteVaccineType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /vaccines/{code}:
    delete:
      tags:
      - Vaccines
      operationId: deleteVaccine
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /operations/rows/{code}:
    delete:
      tags:
      - Operations
      operationId: deleteOperationRow
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /medicaltypes/{code}:
    delete:
      tags:
      - Medical Types
      operationId: deleteMedicalType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /diseasetypes/{code}:
    delete:
      tags:
      - Disease Types
      operationId: deleteDiseaseType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: boolean
      security:
      - bearerAuth: []
  /dischargetypes/{code}:
    delete:
      tags:
      - DischargeType
      operationId: deleteDischargeType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /deliverytypes/{code}:
    delete:
      tags:
      - Delivery Type
      operationId: deleteDeliveryType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /deliveryresulttypes/{code}:
    delete:
      tags:
      - Delivery Result Type
      operationId: deleteDeliveryResultType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /admissiontypes/{code}:
    delete:
      tags:
      - AdmissionTypes
      operationId: deleteAdmissionType
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
  /admissions/{id}:
    delete:
      tags:
      - Admissions
      operationId: deleteAdmissionType_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "400":
          description: Bad Request
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
      security:
      - bearerAuth: []
components:
  schemas:
    WardDTO:
      required:
      - beds
      - description
      - docs
      - nurs
      - visitDuration
      type: object
      properties:
        code:
          maxLength: 3
          type: string
          description: The ward code
        description:
          maxLength: 50
          type: string
          description: The name of the ward
        telephone:
          maxLength: 50
          type: string
          description: The phone number of the ward
        fax:
          maxLength: 50
          type: string
          description: The fax number of the ward
        email:
          maxLength: 50
          type: string
          description: The email of the ward
        beds:
          type: integer
          format: int32
        nurs:
          type: integer
          format: int32
        docs:
          type: integer
          format: int32
        visitDuration:
          type: integer
          format: int32
        lock:
          type: integer
          description: lock
          format: int32
          example: 0
        opd:
          type: boolean
        pharmacy:
          type: boolean
        male:
          type: boolean
        female:
          type: boolean
    PatientDTO:
      required:
      - age
      - bloodType
      - city
      - fatherName
      - firstName
      - motherName
      - secondName
      - sex
      type: object
      properties:
        code:
          type: integer
          format: int32
          readOnly: true
        firstName:
          maxLength: 50
          type: string
          description: First name of the patient
          example: Mario
        secondName:
          maxLength: 50
          type: string
          description: Last name of the patient
          example: Rossi
        name:
          type: string
          readOnly: true
        birthDate:
          type: string
          description: Birth date
          example: 1979-05-01
        age:
          type: integer
          description: Age
          format: int32
          example: 40
        agetype:
          type: string
          description: Age type
          example: "null"
        sex:
          type: string
          description: Sex
          example: M
          enum:
          - M
          - F
        address:
          maxLength: 50
          type: string
          description: Address
          example: "Via Roma, 12"
        city:
          maxLength: 50
          type: string
          description: City
          example: Verona
        nextKin:
          type: string
          readOnly: true
        telephone:
          maxLength: 50
          type: string
          description: Telephone
          example: +393456789012
        note:
          maxLength: 65535
          type: string
          description: Note
          example: Test insert new patient
        motherName:
          maxLength: 50
          type: string
          description: Mother's name
          example: Roberta
        mother:
          type: string
          description: "Mother's status (D=dead, A=alive)"
          example: A
          enum:
          - D
          - A
        fatherName:
          maxLength: 50
          type: string
          description: Father's name
          example: Giuseppe
        father:
          type: string
          description: "Father's status (D=dead, A=alive)"
          example: D
          enum:
          - D
          - A
        bloodType:
          type: string
          description: "Blood type (0-/+, A-/+ , B-/+, AB-/+)"
          example: A+
          enum:
          - 0-
          - 0+
          - A-
          - A+
          - B-
          - B+
          - AB-
          - AB+
        hasInsurance:
          type: string
          description: "HasInsurance (Y=Yes, N=no)"
          example: "N"
          enum:
          - "Y"
          - "N"
        parentTogether:
          type: string
          description: "Parent together (Y=Yes, N=no)"
          example: "N"
          enum:
          - "Y"
          - "N"
        taxCode:
          maxLength: 30
          type: string
          description: Tax code
          example: RSSMRA79E01L781N
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        blobPhoto:
          type: array
          description: BlobPhoto
          example: 
          items:
            type: string
            description: BlobPhoto
            format: byte
            example: aVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUxRQUFBQzBDQVlBQUFBOXpRWXlBQUFnQUVsRVFWUjRuT3k5ZjVBYzUzbmYrZG51ZVh2ZTNuZG5NSU1GUjdzQXVDUmdpaFFSaUJRaGlaSmhVWlpJazZKQ3k5R1pkYkV0eFU0Y09mRzVvck1ySlYrNVVsYVZ5MVZ5dVhKbFYrS2M3M0xsa3lxWDVPVEV1WlBMUHAvdUpOdWtaVktHSThrQ1JRa21MWXJDZ3N0ZHpuS0F3VFI2OXQxK3A5L3AzdnZqN2U2WldRQjBZdmtIZHFHbnFxdG5wbi8zZlB2cDcvdjhuTnZaMmVIYmNtMTUvRDJuT25tVzN3T2NhVFFhTkp0TlhseGJPd3BzRnF2Y1k3UHNpNjEyYTZuZGFtKzIycTJsNTU5L3ZpYWxyUFp4NnY0SHkzWDV3aGMrZi96RkY5ZStkM201OWV2bGIvTU5OZDVZMnpqYVBOQmNQN0p5aE9HVitETEFrU05IT1hyNENELzdzNzlrL25xdWRuL0kzTGNCZlgxNS9EMm5Xbm1XZnhqNFQzRWNyd1A0Z1RqbGlhQ1gyeFJQQk45anMrei9BZDRFZkFaWTJvRVBBYzhDaEtIYzlPdk5yd0NzcjY4ZEJ4NHhoZzlKS1g0QldBbkRZQzFKZEFkWUE5YWJCNXJFT3U0Qmg0R3pBRzBwOHllZWVpNzlhNzcwUFN1MXYra1R1TUZsQWJnVldDbStyd1AzV0syL0twVENEOFM5TnNuV2dhVmllbE1ZeW51U3hCQ0draVF4UkJlajQ4Qng0QTdnSjlwdHRRUjg5OVF4M2d4OEYvQkg4Wlg0RERXK2IyclpLMEFNWEw3V3lmMzdULzdQbnZBQ2Z2Q0gvbEgrbDNqTmUxcStEZWhyeU9Qdk9SVVVIMVBnN2NETEFNMW1FMjJTaC8xQXZNNXEvVFZRSGVCSGkzVTNnYVVrTVJoakhnbkRpblk4Vk13ZkFZNUxLYmE3M2VnZEFGS0tGZUFrN2tHNUZUZ05QRmFzLzBveEJRKzk4OFE4a0Q3eDFIUGowNmVPZTJmT25zOS84c04vendNV3Z2bU41N1orOElmKzBWL05qZGlEOG0xQTc1Sy8rNTU3QXgvSXhoWWdtcGN5TWlQN283SXVub3ZqK0tCZkV3ZXpzVDNsMThUQmZKUWUzL0g4UTZHUUFHc3lrSWY2dytqNFlydDFmRGcwMjQyR2ZKTXhuSXUzOUQ5b0xxZ2xnRmN2UmdzNlNjWkhsdHNHZU5kUTIwRFVaV0JINWl0QVc5WkVCemloamYwL2xSU1BKTWFjYmJlWFh2bjBaOCs4QXRCdXQ3ekhIanExTUJoRUJ3RkNLYmNlT24zQysvNGYvR0h1UG5rdkR6NzR0MjlxYmYxdFFFL0pCLy9PNmZKKzNBUDBjRnIzaTdJdTdqZWo5S2VBVHdHeFh4UGZDendGTkVNaE93TWQxV1FnM3dWd1pMbDF6MFkzQWxnWURrMG4zdEpMd0ZLOHBSa09OZFFFQlppWDRpMGo1K2JJZ1VPaUx2OFUrRzVSNDRRZFp5Z3BLbHFTcHVhVmQ3M2p4R0VoSkl4dHo5cjBxRkpxMjlwMEcrZ0FQSC91cTcyN1Q5NzcxM0diYm1qeC9xWlA0RWFTeFZzNkhhOFdMSG0xQUNIVlNiblFXb3BpalJsWlpEMjRIM2hiTnJZVVU4c1RKVE5oSEFwNUFqZ1JieG5pTFdlWWlMZk1TZURSNFZDejBlMTU4WmF1bGdHZDRUQkIxQ3RxY29zZEdldzRReHZiQTA2S21uOEpRT3ZvZTRIRDFocXNUZDhFYkFNSUVSZ2NOOThHZVA3Y3MzL0ZkK2pHbDI5cjZFSis4c2ZlWCt0ZjdNWEFPL054MmdFZTltdmlhN0llWUVicEs2Mm1PZ3g4djE4VG05blk0dGZFaWw4VERJWVJNcEMxeERxZzVpTm9Mc2hwNEM0eFVSeGVjMEdXdjBtQTZGSVhVWmNFUVhneFRaTkRzaTdLN1U0VTh6N3cxdUx6S2VDQ0VNRlhDbURmNlh2K0FyRDFWM1JiOXB6YzFJQisvTEhUM29NUFBnaEFiMzFEQXR0K1haaDhuUDYzWGkwNGFyYWlrd2g1amxHV21nelpPdGpDYkp1VlpHUWhzNjFrRkJIV0pSU3NkWEJGRTQ4Y2tJZER6WkVqSGJtOWxYcjlnVVlwaWRhRzFCaUF3MU9mYWJTYXNSN3FlOEYvay9UOW12WFNYUHIrbjdIRFlXMTRkeUQ4TjJSWmxnSi9KbVh3NjRCTVIvWk9OYS9lbXFmWmw0RkR2L3ByLzZGM3JXdjh1Wi81OFdCbFpZVmYvK1FuV1ZsWjRkLzh4OC9zYXhQZ1RRM29UcWZqUGYxN241VVVyMnljZVc3TnExVlVZZ1VJcEpKRXZZaFdwMFdzalRmVUNRMFZNdFFKbnNrQWlLNW9qcTEwd1BqRXNRWWdqblZOYTRlZlhpOUNLWWxTRXFDbWRWS2RoMXBRVGVEdGVxaWJ3eVNoRVlaTHpYbTVCS0MxZVlOU2d0Um0zMmZUL09tVnd4MkF3NnZicTIvVjI1cXdKamNYYitsY2RXMFBuVDR1Z2ZIS3lwMTgvdW1uQVZiVzF0YldmdnJESC9ST3ZQRVUvL0RIUDdJdkI0ODNOYUJQbmp6SjA5Mk5RMHdBZmRBYUhYdTFnSHljcnZnMVFRYUhwWktVb0I1dVQ0QVlhd003Rm5EYW1iVWVudlRkNEErbnBiWE9TaERQU0tmVFpuVzFpMXBRQU9oaW0zamJBTlNhODNJTW1IWkxIZ0l1QmNLL0JEelE2L2MrcmtMMUZ1QW84QVhnbnY3RjNsY0JIanA5b25QM3ZYZkh3QmhvQVpmVzF0WUEvaDdPZWNQelgzMW04L212UHJQOUQzLzhJMzladC9HR2twdDZVUGhQUHZLeE1ZN0wzb256OXVIVmdoVy9KdGFGVkFpcEFKcEdtMmE1VGF3TFNsRm8yTUVWN2NCY2ZLN1dpM1dscWJVMmFHMEtEUjNtQUwzZW9BUjZyTGMwT0lET1NMeHRaR296dExab2JTOEJCM0ZleFA5bWFuNHZzUFRRNlJQTzJ2SHNNenovN0RNSGNVU29CbndDK0RrbXpxSFczZmZjOXkzY3RSdGJibXBBQTdTWFY5S2h6WTRQYlhiLzBHWk5tMlVlRHR4YlFKTWQwRnVHYkFmU25SMWtLRWx6R0d3WnVwY2k3RTZHSGxtaUxlTSs2NVE0VGdHQk1aQmxHWTJHUkVwQkhHdjh1dlRNR016SVlrWVczOGN6MnpyM2ZWcStqN2QwcUowUExnMTVhYk5meSthb0JmT3k1dms3ODU2LzQyVloxdFRiK29mdHRsNXBoK3FVcklsTGlUR2RqT3dOaVRGZU9yWmVNdWJ0eVpqdlNjYjhTSWI0dDhuWS9OMWtiTDZhak0yV0ZQNlBIbnY5bmVueXJVZjU1WC8rTTk1di91WW45dDMvZjFOVERvQzF0VlZ3citNSGdOdWlPUHFOcFZ1V01NWGdUdXZaMkNDOVhmeWVHTlM4SkI1YWdtQVdGNjJXWW5NelFrcUJNUlpqTEZJR0dKT2l0elI2cUNtME1pYTFUWUE3ditNSUwzeHpBK0g3WGx4byt1WUJSVExVbUMzZGxBdXFKUFkvRFd6S21nQzRaNjdtYjZmRzNnNjgyNjk1dDJmamJFR0ZDcDNvbytuWUhwWTEwY1BaMUg4NHNlbFhWNy94d3FYVmI3eHc2TmpyNzd4MDdQVjMvdVhlekJ0QTl0MFQraGVRdFdMK0V2Q09Wck4xUC9DS3JFdGtYUmJXaWFTWUptRFcyNllDZDVybU0vTlNISkFGeHFSRVVVRS9oaHJWVU5VNi9jdHhOVjlzTnhnV1lHNGNVSlRBYmk5M3dMbmhrVFhCSU5GTHhua3lid2R1OTJ2ZXp3SHZMSFo1MU5yMC9xQW1EZ01VNjkwVE9wdjVzOEQzNFNnV3E5OTQ0VnU1YnplazNOU0Evb1dQL3BqM3dROThDQ2I4Y2czNENUTXltSkU1WEs2blZEZ0RaaFhPRHZLc3pZcjFCRkdrS3lDN3lTbldWcXNZL0cxcGV0MnJMV3o5d1pEK1lGaUJHR0I0UlJNMkZISkIwVjd1bkRCYitvNENvREt4cVFSTWFpelpPTDhRTHNnMVlDV29pY1BwMkpLT0xlMUdpMEtUYnlZMkpSVEIvd0I4SjNEbTJKMTNmWXQzNzhhVW14clFQL3V4aitldFpabkxlZm1VbkpmSDVMejA0aTNUN1BhaU44UmJaZ3Z3WkEyeUxDV2J5K2tPSXJJY3VyMGh2aS9JTXI4Q00zaFk2Mk9NclVDZFpjQTR3OGZOM1RLRE5obkRMWXNaZzVnVFpLbUgwUm54SUNFeUJ1bytRZDFuc2RPazI0MVkvY1lHZzRzUmhpQ0lva1JhdTBQWVVHT2syTXAyeHVOc1o3eEV6aU8rNTUvd1BYL016azRlQnRJekkzUFpHRHNPUS85N2ZaOEZQVExuZ04vNTlGUFA1WHFndlkvOHpEL2ZkNmE3bXhyUUFNLzh5VFBnTlBQcU0zL3l6TzE2MjZEbTVlSE9ZcXRaVW9yZFltMUdtdVl6M05sYVo3NVRTcUdVcW42ell3ZDRiZHh5ditaampTVWJaMWhqQ1lLZzJuYTNSRmMwZzRIVDJDVmxnUW12MTlySXNCN0tzQjdteVNnWko2TWt4ZjJuVXRibE9Ca2xoOXB0ZVR0d3dkcjhnaERlTjRILy9JOC8rTmkrSFR2ZHRJRCs5Ly9tWDNrZi9EdW5nN05mT2x2K3RIYmZXKzU3Q2tDRnNnbU9YZ0IwRGxaV083UzJDT0ZmTlJBRVNOTVVJWnpydXB5bjQ1eDBuS09rKzU0VkFQZHJmclZOT1pYQWpxNW9WdGQ2cks0NWFySzYybU4xMVgwdWJkcGFtNXBTY2tIV1pRMDRoQnZnQjRBTTYrSFlqSXdFYW1tYWthYlpCYVhFTjYzTkx3QnN2THpLK3N1cjM4cnR1MkhscGdYMEQvL29UNVoyMm1sWlZmUHlpK1dnRDZCWERObzZCeHN6SzZacGp0WU9nSzFXQ3lFRTFscTAxcVRweEx0c3gxbWxwVVVCWXIvbWs0MHp2SnJudEhneHRWcXRhcnZvaXFaMVFORnVxNHAvQTFQMmJPZEtOeVBqQVppUjhjSjZTREpLR01TREdrQzcyVVpyZXlFSS9BdkFkeWdsUG9kTFd1RFhQdm5wOGJkdysyNVl1V2tCRFJCdEdhT2pxR1lUczBMT05qbU5vTzUvTmNzellxM0o4b3lMQTAwME5BUWlJSlFTR1hqNE94a3k4SkExa0ZKaWlwZ01LU1YrRGZ3YXFQbGc1bkdKdHN3VXNBVys3NmdIZ084N29CdGprTDV3ZnI0eHpxNVI4L0VEeDZtZmYzNE5kYUFKdFlEZVpZMGVaU1NGVFJ3dkpNbGhzeC9CamsrckxqRmFzN3pjaXRJeDIrbVlUMGdwYXdOamdrOC85ZHkrQkRQYzVJRCs5Qk5uYzV6SERUc3kySkU1SmFWWUNzTmcweFJnYTZpUWpkNkFXQnVhdTF6WXBmbXRCTFMxRmhrRWJpb29Sd25XYVRIRzRIbVRXNTlsMmN4K1dnMkZyQXVpb1NhK29obGVjZlBtQVVVY2E5YlhlOFN4cHRsMHg0LzZBMHlTWUlxM1Nsc3BJcTBCNG5qTHJBMkhDY05oUXJ4bGpwNzU0dm1yVEN5UHYrZlV3bC9zRHQ1NGNsTUIrcUdIVHN3Lzl0Q3BtV3NPNnZLVjFEbFJ5cFNuQjZVVXZkSXBVa3JwNmk1QkhBUUJhWnBXSU14elp6Q0l0SzRtS1VURnBYZkw5UWFDWmxUUW1PSTR3eWt6M3JTVXJ2V29QNWhzbXlTMGxKcGU3WXZBU2hHanZZSkw5WnFSQXN6M1BQNmVVMHZYUE5BZWs1c0swTGo0aGxZSjZzY2VPaFdVWU5aeEJGQjY5anJ0dGdQR1JzOEJKdGFtaXVOb0hacHdYZC8za1ZKV1doWmdxZFhhRGF5clJBaEhPOHBwV3FLaEppcURsYTVvR2djVXpRT0t4b0haZmE2dk8yVzdkT3N5cmNVMk1neHBUNDRidDVRNkRLdzFGeVROQmZrZm1UaVJBRGg5Ly9IRHVGekhyVTk5OXV3bSswQnVLa0EvOGNSelpqQTAzbUJvN25qNDNhZThOR2VjN25ESWwvS0VQTkM2a00xUkJpc3RBYlRiaXNSWVh1MFBrV0dBREIwdk50YWlUWXJOd2ZNOHNpeERLWVdVRXNZUWJXbkhuM2ZBRDNDZnkybEt5bTJadGdiWFFDNUlFRDdVb0hXd1FWRDM4SHlQb081aGR6S0dXNFo4RG9aYkJpa0NRc0RFbW1nUTQzblpPTXZOMlBPeXk4YWFjeWJOMWtROStKUVoyWnBKc3hyQVcrOVpicjdyL3VNcmJTbS9MeHBHOGFjK2UvYXJmL1YzLzY5SGJpcEFGM0laT0tpMXViL1RhZE5lYlBXU3hKUUJ4VjlMRW1laEtPbEd1NjJJSW1jUEhndzBKbkcvbThSaWtva2R1YlJzeU1JOEYwVWFLWU9ydklxbHFDa05udTFrMTF5bmxFRmZZN1l0WnRzZFcyOFo5TkRRV1hadmlrSHNOSHBKVTVSVTYwRXRRQnNOOER6dytVWlRNWXcxNzdyLytFa2x3NU80YkhPZU9IUCs5LytMNzl3ZWtIMXJZTCtXbkw3L2hBZWdsSHhSYS9PQlhtOXd1ZG1VNTR2Rko1UEU5SUFMd0p1U0pDVU1BMW90WnpZckhSdG1ERElVeUZCZ0Vsdlpua3RPUE0yTmpiRWNPN2Jra3FpdUllVzYvcHlqSENXd2pURXNMUzBSUlFVTjJyYkllWUdjRi9TNlVRVmtvS0ltMVQ3SHRwb3JxZjZZVUg2OFdQU0dZYXpmMFlzR2x6dXRkZ3hFMnBqUC85ZmV3eHRkYmdvTi9mN0hUbnNBWjc3NFhQVnlMMEQ5d1VFLzZ1Q2kwZDV0dGswSGVGSktFUmxqS3kvZGJsc3dVR2xxcFJSQlVHVzRWQnA2K3JPYW45WFN1d2VLMlU0Mm82V1hscTQ5UGh2MGRhV2Q5WERpeFJ6RVRqdTNtd3BSRTlpeFBRcjhDdkRGT05hSE50WjdoemJXZSsrUFkzMUpTYmtHbkFQT2ZlNkw1K1ByMzdXOUtUZUZodTUxTjROSDMvMm1CU0NnaHRRamc1THlFRFdPYmlmMjUwVGcvZmJjeUh6VHI0dTN6dm5pVHBCcHFPWlozZGlndFNESjhvem1BWWtaWjVqSWdPL2oxM0t5Y1liV3VnSzBjNUJNam11TXBkdnQwMm9wc3RURmNzaTZRQVlCWk5lMmNrZ3BDZnc1ZW9YMVFnWStadHRndGpPa0RKQlNJbHpBRVdiTDBtZ0laQzVwRnlZOGk3OU56ZitLRU1GdDJxYm5OdFo3UjNISnRUMkE1a0w0Q2hBOWNXYi9nUmx1RWcxOTV1eDVFMStKRFZCVFVxNEE3OENGWG9MN3MzOGVaNC8rRWk3YmVnR2cxWFF1YnpVdlVQT0ZYWG5LeStmWC9CbitQQzFsdEYwWkQxMktHVmxNbW1MU2xETERlMXFydStQSmFwcnN6OFZUVi9zeGxwTHZRNVc2QmZBVjRVSkZ1K25Zc3JqWWZoQTRENXhkWEd3L0NXenVWekREVFFMb1FreDhKYjdjYWJjL3I2UmMwODUrL0k1aTJTdGEyeC9YMnI1dk1Cdyt0N3F4TWJPaDNyYjArcHJPb2tKSVFUN095Y2M1WG0xeSszYlRDR01zclpaQ1NsSHhieWtGUzRkYTFlQnRldDFTT292dEt0WmFiNXVaWmFXRVlZQ1VnakIwYjRibXZLVHB3SjhLRWJ3cGNCcDhPYWlKeHhZUHRaNWNYR3lmQjg3ZmVkZXh5MCtjT2IrdnE1bmVGSlFENE16WjgrUFRwNDZiMVc0WEplWG5jVGJaQzhCL0h3ai9zTllXcGNUM0JiWDVYcW1aQWRhN3pqeXJ0eTE2MjJLTlJVaUJOYlp5WFZ0ckVZVVR4ZmNuQUowR2NoWHNYMnJvMGRWQVhWcHFvZVpsUlRmVXZFVEh1dHFmMDlKWnBabEx6ZDRNdzJvZjFxWlltNUtPN1RNcVZLLzBMMFdYZ1doeHNYMjVQK1dFMmE5eU0ybG96cHc5UHdaYTJwakR1S3FlL3ptMTJjK25ObXNwSlE0Q0p0M0pXNUV4ODVFeGFLUHhBNEVmQ0pwTmhURWdmQTlzUmlPVXlMcW9vdWFzdGZqMVdRZEpDY1RTVWdLZ3pRVE1TcW5LUHQxc0tkcnROcjFMTVRvMnFGQWhBb21zQnk1bXBCN0FEakEybUswaFBqblpPTWR1R3dmZ25ZeDBKd3ZTc2MzVHNmMEtjRkFuZWlFUTFBTEJWaUJnN2Z4cThORHA0L3RhaWQxVWdBWTRjK2E1UzhYSG93RHRsbHdQaFArZnl1VjJsQVNEaTExMFBFRFVKNXF2cks4aGcyQkd5NWJob0FCbXF3eFNtdVhHTHVEZmJSOEVRYVhOdFo2WTNCb05SVnprRzRxNklFMVQ5RkJqOUxWZDMwQlZBZ0VvNHpwUzNGdkhuZk4yZW1IUUg3eVFiQ2Z6Zy82Z0pVTlprM1ZaZStqMDhYMzd2Ky9iQzNzdE9YUG11VFZjTFk2Vm9rekFIK1BpSE5aRlBVeFZzdzJBSFNWWGJXdXVNUURjTGROcFY5T0R3bkplV2tWSzUwcXpBR1paejhPT0xLb3hhdzRFS25CWHRUeTJYSUJTb3puRHlVdjM5dWQwWWkvZ2lqbDJBTUw1RURNeStSTm56dSs3VEpWU2JrcEFBNXc1ODl3THdDVmMvZWZ2MU5yK3N0WjIzWTZTVW9PVFZwbmZKVVdZRFB6TXlMSjBxRlZSam5KZXBtQk44K1pwSzhhMFJhVDhIRzlwbWd1S1JrTWhDc3RIcWFsbEFmcDJwME83NHh5YWVzdGxqWmZBYmpaZEZONHcxajI5blY3UTIrbnE2c3VEMjFVb2JsOCt1aHlFOCtHRjltSjdHOWgrNHN6NWZWMEs3S1lFOUpOUC9yOGV3TW03NzkyTWRIb2VYNXlJVFBJZXkwNlVwSGt6SHVyVUMwUGkyR0lNeEhGYUZudkJaQlpxb0Jha2k0OE9KYUl1S3VwUmVoR1pBek5LOGYyZ21rcVA0bTR6WDBzcEJoY0g2RmlUNXpseVFlSUxuODMxVFJjR1doY2t3d0U3ZVlvNjJNUUE2bUNUWHIvUGZMTTVsbEtPTS94eGJMTG4xcnJSZUswYlhUQ3BQZVBQQjE5TmpPbWxXWmIrMFpmT216LzYwdjdWektYczZ3SEM5V1NxS0hnUE9LK2svS3lTOHZXNDFoRXBMcFdwa25aYjBYVTFuMmVrRjBXSW9rR1F2WWJWQWtCcmpSQUNwZFFNWndaSE9jeW9jS2tYSGhrOTFMVHFyYXYyTngyclVjcWQzM0hFRFJTQjVVN3JaemQ3Z3llankzcTdkVkQ5V2J1dGlDNXJ6ci80NnI0MjArMldtMUpEQS95clgvbEY3OXpYbmtVYlF5OGFuRmN5L0Fid3IzSFdqNkJYNVBPVjd1K1NPblNLTktuQ2pnMkFxSXVLS29BRDUrN3cwV2t3QjBGUUJUWEpJS2g0dVVsVFJGMVVZRzRWTm10WmNPa3libU54S3NjUm9OdUxmcmJiaXo3ZTdVWG5Xd2ZWbjMyTHQyWlB5MDBMNkovOHFYK1duM3pqdmVDOGFPZUJuMUF5L0JSd1NCZEI5ZVY4TU5DVkU2TVhSU2k1cXk1SGFZWnJLRnBLc2RScXVRRC9JS0RWYWxVNWcxWGliSkVVQzh5QXVkeEhhZVVBS20vaXROMTZzZDFnc2QwbzN6SWYzK3dOUHY3TXVkWGowK2RVUG9nM205eVVsQVBnb3ovOVk3VmYrOFIvR0orNi84UkNGQTAra3NFOXJWWWJWUU03aHRZQnhUUDlWWVR2Y0RNWWFGVEQ1ZnVsTm5OMjRyckFwZ2JtSUtqN1FFYTBsZEZlYk1PV3dZd3lmTjlSaSttczdpcktydVpqYlk2UWpvUDdOYjh5L2FtR3docUx0Z1hmSGhkVmtPWjhsTEowRGpVOE8wNi9tbzZEZnpLSXpSMVN5aGlJQmhjSCs1NG52NWJjZElEKzBSLyt2dHFSMTNYNDJDOTlmUHp3dzI5L0MvQWJVc3JqeGhpaWFFQnJJYVIxUUZYMW5uc1huWGN0Q0R6MDBGYlVvclFUcStaRVcrdHRRNnZaWWxBR0ZzMjdZdWdsM1ZCS2tlVVR1N1djbDlncnpwYWRqeDBPZlNiT21YS2d1ZHQ4QjlDN05BUzQxR290M2dHOHVITHJNbXN2ZC8reWJ0T2VsWnNLMEI5OC9DSHZrNTk2WWd6dzhNTnYvNGNici9aK0JYYXFCRkZqREZFMnErREtlblhUZFRoVVEyRkhMcmhmYnhkZ25aY2N1M1dKd1JXbllaZHZYYWI3Y3JkS3pWSktYWlZIS0VPSkdSbk1scm5LL0plTk00UVUrSmsvOHhBQjlDN0dkRzVwQWp5NDluTDMweXUzTHYvVUE2ZnYrOHpheS9zaUxmQmJrcHVtayt5UC9NQWozci83amQvTkgzNzQ3YldOVjN2L0F2Z3d1SEROVW94SkdGd2UwcDdLM1J2RU1kRWxnMm9JMGpSbmVNVVZXeXpCRlV5NXV6dUxyUXJRWVJneTZBL0lzcXppejBFUVZOcGFscGtzUHBXRzltb2VRUzJvTkxPUXpyVnVSODdVcHhxS1pxUGc4Z1dvNDZFN2o1VmJsMzhLK05YaGx1SDhDL3ZmUEhjOXVTa0EvY0VmZUVoKzhqZWVNSSs5OSsyeTI0OC9hMHp5VGlBM3h0QmFhSHZUZFRXaVN6MmtGTldnS2hDZ2t3ayswc3lWQWhPaWNLU2tFNWQybXFZb0djeDRFN044TW1nVWRXZWZEb3FXRjZJbWlLS29pdk13SmlXb0I4UmEweXlzSk41YzRUN2Zpb3A2SHBQcmFqVVUxS3FNUkEvNFg3c3ZEMzdpTCsvTzdUM1o5MWFPRXN5bjMvSEd0dytHK2cra2xPK1VNc3h4MSs0Wll5b3RQUmdNS3E5ZTZiTFdTWTQyWlgyNmpDRHdVRXBVRktTa0htbWFFaFFtT0dOdE5aVWk2cUxpd3FJbXlueS9LcnkwTFBCWWdqa3VOTGsyR20wMG9pYXFCNkdNSjRtR0dtdXNaN1lNMlRqTGdmL3U2UEZEdi9KWGZVOXZaTm5YR3ZwSFB2Qkk3ZC85K3UrT0gzdnYyOTgrR09vL2lHSXRwWlE1NEJtVElHVllXUldTSk1FWVF5ajh5bTJkSkNsMm5LTkNENTBVODNTMkR2UndxR2tkbWpoQ2RESnJMaE8rZTBDQ0lFRFVSVlhvdkJTZlNmQytsQUg1RGhXWWdUS2xxc3BTS1hNR1MzTmVxKzJzSVVYQ1FlNExQdytrZURFMTluM3I1eSs5Mkc2SHRjRWcyYmVWa25iTHZoMFUvc2dISHZIKzNhLy83dmowTzk3NGR1QVBjT1VKVERFSEhHZUdPUWFEQWUyMkMwaWFUbzFxdHhXTUp3NFVuVGdUV3dsb3BRUTVib0JZeGw2MGxITFpLRVgxcEdrM25SM1pTc3NDcE9NSk5YSHBWWUoybzAxRGF6WjZ6ckZUSkxzNmVyTGx2SlZWcGtzUXpNUm4relhmczBtYUEzY0VVdnpPMGVPSDNqY1lKQysyMjZFM0dDUTNCYS9lbHhxNnBCbnYrOTd2dWorNmt2eC91TElGT2VEWnpFRk0xQ1Y2T01EUGZZek5hQlVkSDZKTExqdEoxbHlHTjRWdWE4MFg1TldEeUx4RzJZRkNSU3pQQnl5RkFraFo3VThla216SDdhZW55MzNNZXFadHNidy95bGlzKzVoUmhwN1NyN0lHcWlIUXd6TG8zLzBlQkFJaEFqZklUTE54b0VRTldNdEcrY042Uzc5WWJyL2ZnYjN2QUQwRlpqblV5YXZabUtiV0p1OTAybDZ2TjRDYXEyTlhpc2d6VEZxVUQ3QVpMUXpHZ2hSZ0xDd3J3UXdHcGtZZDdkREQySnlsaHZ0eGM1aUQ1eGRBTG1XaWhkdnpQaS8xSnc5RFQrZlk4U3lnczl5alAwVnArZ1h3T3dWd3MxQVU5dkRDekRlWFZYRWlRU0R3dk9MM3dCOEhTdFJhQyswWDlKYSt1K3dhc044QnZTOHBSd0htM3dNSFpzQ3JTdENPREdtYVlFZkdhZWtSbFhZMk51TWFLWHkwUTQvVnZxVTE3M09zWFZnZFRFWkwrbXphQ1Q3dVd4WXdEdWx1cHl6UHUzMTJ0MVBhaFhZZmJHZDAxR3hXaXpZZTdiclBZSlRScnZ1OEdHVXNGZ1BPZnBwWFFKNFcxWmdxbFJETXJ1QUhQb0VMYzYzaDNpL0hnZDlSQytwOXUvbjdmcFI5cGFFTDNweWZ1di9FLzlSVThzTkFIRjl4UFFiTFF1RWJHNnVJdXB6UzBwS1dDcERDVVEvMGhISkVDVWpQcHgwNmdGVzBZMFl5bGhlbWZoK0hNMHNOczBrQ3lhN1l0MmhyOW9mQjFPcjlVVGJqak5GanA2RkYzY2VPTWtUZEowOG5HbDhwUlpJWUFpWHdBNTlrWUdpMm15VmgrVi8wVVAvVHpHaTZGL2V2bHQ0M2dQN2dEenprZmZJM25zZ2ZlUGRiNzlkYWZ5RUluQlpiUEtBWTlDUE10cUc5MkNLSkJrUmwwVVVsQ2ZPaUUreFFJK3NCS3MvUU5rTVZkdWJBejVDMUNXQ2J4VHROMUR6c09LZlZjSkZ2dVUzSXhnWnFFbEVMc09Ocng5RW5vd21XakUzSnM2S1N2NTBBVTZjWlBXMVJnYzl3YWpleHlhYUd0Q0I5bjhIY3JtenpMVU1nQmFvb05wbmxlZDVRcmxqN1VBOGZldW5GVnovMzU5L052U3Y3eWc3OS92Yzk0R210LzBVMVFBSUcvWWoyWXF2NkRBN0l4enB0MmlwMHlhZTRKTlF3MkZVZkkvQm9GM2Jwc0RiNUxJcnlCVW9LY3B1UVc2ZFcvVm9SR3oxT0VZVTF3NStiamNNSUExRWRSNHJKc2tENEJHTEs2MWhreHpSQ3I1cWFjckpjRmg2V3NrcHFtZlpWeXFBYm9RZWFXTWZsZit3MVZPTmZ2K1lOM0FleUx3QmRhbWVkMk84SFRvTWI5U3VsTU51RzdzdWJMbENva0xZS2FSVVV4SXhTa3RUU2JpaVN0QWdERlQ0cThDb3RIZFptYjFQWkFDZ2RYOS9hTWEyaC9ibmdLbUNYSWdJUHNhdGZpd3A4Vk9EVFVXSUd4STNRb3lWRUJXYVRaUXdHbW5iYnRhNVlYbmFteDlSWVZGc2h3b0NtYWdKNFRkWE1tNnI1aGhOLzY3WWZ1KzVKN3dQWjg1VGpnei93a0FlZ3QxTjZmZjFsTXpadkFnZG9jSlNqKy9LazlQRnljOWNvS3pXWTBRUjhqYnlJUzY3QVBGblZqRE1FZWFXaGc5b2tOczRUSVg1TklxZld0K09VTkhXQXpuYlM0cmNKWjA1U3k1enY5bFZTampKL0VSejE4SU1Kb0dPVGtlMzRtQ3pERkFYV0IzTmlSanZQQ1E5ZHVPMUZHRlRiTjFRakgrb2hpd2NYTHh1dDMvcmNuNzUwNFZyM2M2L0wzcmR5RkVPZWFLZ2ZOV1B6cHVueVdUcU9rTXFuUFhXVjBvT3MwSjc1MkNKM1FOVEE3bVNJT1IrMTQ4KzRzZ3U4a1kzVGdrdjc1SUNjZDl4WjFOVk1nRk5ZQXltbm0veE1MQXVwTmVUNUFtazU4QlFCa1hGMHBhUWJlU01nU2EzTFJ3eGNNZlF5WXErdEFnYWpqQUNmWUtvdml6Q1dRSGlrTmtlRkRWcTNLTFN4OUFZYUtTWHR4VFpCUGZCVXBzYlVPSmlNMG44Sy9OUzNkdU52VE5uN2dLYXE2L2JlNXJ3a2czRlFsN1hCUmFlVm80dlJUSG9VZ0Y4THNFVXNoYzVTQjJTLzBISlQ0WjRBM2hTZy9WcUFtREtUeWJDSkRBU2hkSllOS1dYVlcyVWlBYWt0bkRsQmlNbFRoR3BnOWRBZEo1Q2tSYmtFT3pJVnB3ZEhoN0lzcXlyOFoxbEdNUDBHc0tCQ1FWcVlEdFdVL1ZzbktVb0tNbURRSDlDbURST0srZWhyM3RBOUxQc0MwSVU4Q21DTE5tZEJYVlpsQ0thbEJHYjVXY3o1QklVelFzejVNNFhJQWZMQ2JDWkNoVjhMa01IczhoTE0wMktTYWExY3hGTUw5eURrdGNrRFlmVVFVZCtWenBVeEEybzd6cW9HUTlOdEwwb1JOWi9VNXVqRTBtcE02SWtxVXNiaXhHMVRKQjE0YmIrZHR6dnRPMDZkUHZIaHMyZWUrOVZEQjhQYXBjdjdKOVpqVHdQNmh4NS9sK2ZoTTB5U080QTdHbUZJQmw1UWdHUWEwTXgxeno0QUFDQUFTVVJCVkhia3NrM3lzU1VmbHlsUUFXUVphWjVOTkhTNWZsbXZMcnk2VjBwSk4yWittNklkcmJhcm4yR01CaWFjT0xYT3JGZUtVQTNTUkZkMjhhQWVZb3Nxb3JJZUlPc0JneTBYTkZYMlpDbmZJTlpDT2dZN2w2RkNnUjIvOXZoK2VsQnNuTm55dmNDdkNwOTlaWlBlMDRET3NvellwcDZvaTBldHpjbTluYXIxbWplR1NwK2xGakVId2RnaWhBSmJhRkNoOExNWXovUEpkakw4T1o5OFZHYW9TTVQ4Qk13bFlDWEFPTUd2Uy94NmlDOEUyY2hpaTZnNmc0OHFLSUpvSFVJdWdFME5xVTNJMDBtS1ZWQnZGdGRRN0Q5UW1HM1hJRWduazJxM1llaGh4bUIzZ0RrZlNZYm51MnVUQXZ6TUo3TXc3L3N3Rlh1dDVpQktOV0dnU0VZcGMyTlhtenF6V1I3VVJBMTQ1SzRUdDYxMEx5WXpqWVQydXV3THN4M3dYaUU4ZEZGVlB6VUd1OHNsVjFuR3NoUzhnbXRhVGJhVGtSZDVmcnQ3bldUcGRIc0p0ejhIWkVsUWxBdkxSaGEvN2tEdDFZT0tzcVNweFJZSnJpWHZGc0UxL05oVEl1ZXZmaHZBUkZzRHBEc1F6TGtKWEc4aC96ci9vdlJGRlprM2lIV1pPVjVMeDNZc2FrR05vcy9LNjVhYSt3VUhleHZRLyttM25zNTFZdEdKdldQM3N0UVlBaW1kWnZaQXpGMWpCNTVBK0FHZTUrUFArVld2azJ1SmxKSlFodmoxa0tEWkpodVpBdHlGczZXb0wxYzZkRXJuamswTk5qVUVJaVFRSVo3d3FneHZFUXJDYTFBYUZjNVNtbW1IVHdWa2IvTDV1dWZzdTBTQXNCNjR6Z0YxZ1IybktHZUZHUWMxOFVPdnZZZTlKM3NXMEkvL0hkYzNSUWp2RHVBT1d3eStVblAxUUxBRTg3VkFQZDJ3eDJhRlJsVUtUd1Q0Z1hCbXIxYWJVSVlWN1NqQkRPQk5EZUQ4dXNEYUZDRUMwdFFTUlM3N083VUpXZzlJYllKZjg1RU5pU2M4Y3BzajV4VmhxQ3BncS9tbW13cFFUdzhRcDhWT0J3QmVCOWdtbTNRSmdFbHREenRPc2VPMEptckJTWUJYTitOOXc2UDNMSWZPeHBtSDYvQjNmMUR6RWNMTEFTODNLZGljc09aNkJrclB4NS96U0F0SGhMOHpSVG1Bd051cEVsNmJxbzJTa21DcWpLNVlhSlhWdHBDTk5tWTg2NGl5MW9Ebkl3SUZPNUJtS1FnSWxBTGpJYVFrN2NjSXo4ZkdFVlpLL0VEQ25BK0JqeDVuVUpmMGVqMlVVdmdGOHc4YkRmeEFPS3F6azdHVEdjQmdhNEowbk9NWDlDaExIZmN2eHdDK2wwMTZpdHNjNDJlUVo0VENoendEQkdsbTNmL3VjL1RFRzI3clBQZG5MMTNWTG5tdnlwN1YwS1VFTmY5MklTYWVPMnBYMDRZMHp3azhEMVhhaVAzQWdkb1BTRk9uMFlOZC9EWWRKWWk2ZExibFlob015c3I2cXBwYW5TTklOYUVJZ1F4SlRVSnFFcXd4NlA0RUsyclJXVDg4RWVJSjk5QW9wVkJLMGVsMHBvNDkrNVlwdWJXY1Y0amkrc3A1bnVmRjI4VzZhWnhWWmp5QWZGZFpCaUdDeW9zS0hLTGcwZnRGOXF5R0xrVW45allWQ25SaXNUYkhuMzc5MW55d0ZqdHR2L1dFR3hoQ05iOFdtRXN0WFNiUmhtRkl1OTBtcURlcTlkUzhxb0pEalI0aVZRTWR1NmFFZ1F3SlpJZ0E3TGF1TENhbEhUdExUUUhxaWNaWFN1SDdQbUprMFBGcys0Z3dWQ1NGZlR1b2VhUkZZUnJoaTBvN3c4VHVMV28rZ2ZBd3Z1dENtMmM1SWhBWW01WnhMbU5yMDVxY1YvY0FULzZYM2UwYlgvWXNvTXRLUStDQ2hFb3RuWTh6TjJJYVoyNjZhc1BaQ1A0U3pFS0VCTUVrVG5xYWRvUmhPR05uQmdmbVVxUnFJbFVUbzJOVXE0MDFoclJ3YVFzWkl1WVZ0aWhJazAxVlJ2SURDV08zWG1rZE1jWVExQ1gyT282aDZyeHJIblk4MjkvUTh6ekljb0xpWHVqRVluZDhSQ0FRZ2NDbTF0VmxLRVNJQU1hODhib0gyWU95WndIOWYzLzJTMk1BR2ZodnNqYWwxV3E3SUtWZVVhKzhMc2dUamMzTGJxMGV3dmZKZHZuRTByazVGeGVSWjFDNHFQMUFrUGs3Wk9PRVZyMEpjMTdsRVBGcU9lMW00VGdaYWNLNlJFckZZTkJEem9mNE5nRTFqeTZBR2tVRFZLakFGK2hFSTJvQlJaY3FHS2VJWFo1R1dYeFBVMHVhelVITlVSQ3ZybUJrd1UvSkNob2h3d0NkRmcvS1R1WThpWE0rNmRoUkxDRjhUSjVoVFZhNWQwUW93STBuSE9wcnJIeExmOFFOSm5zVzBBQ1BQZkxXK1VES1E4QlZ0WmZ6NU9wMEk3TXI2RDcwQktMZ0tHV3dqeDhJUEJHUXBSWi9TcHNaSFZkYzJZdzB5VWdUMWhWU0tvelJ0TnNkak5IT29uR2xqenF3Q0VDN0ZWU2xEZFM4b3RlZkhYOWxwZ0RuN2pkQXBiRW5jUjdnQXBwTVlSODNOa1g0SGpiTHEvTlBjZ2k4cWFGUmFVc1BCS1RXZVNTREVEMGNvQnJ0cSs3UlhwYzlEV2c4THdEbWxWS1ZpVXpPSzdMeTliNnR5V29nYTljMmZRRUl6OFBtT1dtV0VmaCs1VXdwUVQwdFJzZVV0ZEREZWdtNHlZTXpHUFRvSE96d1d0SmFhTHV3MHJIRmpsUDhXbGhzV3hhRmRQdmYvWUJPaXd4RUJXb29Pbk9CQTNZQjVqVFBzU1VkS1IvTWRndmhRNXJPcElWOVcwUGZNSkxuZVpwYTB0UldEZzFlSTd6YmpDMnlHRFNHaGVsT1d6dXhma0NsbFhPYklwVEM2Sml3U0dHU3FvbXMreFdZWlYweEtOelVTZUswTkVCbjVTNzBsVDc2U3RXdXBTcnFPSDErb2hZVTFacmNvRE5Ka2dySTA0QzJJMVB4YVdQTGJsekZBTS8zU2JNTW0rVUkzOFBML1FySVlzN0hsQUVBcVFVME5CVkJFRjRWRkxWZlpFOERPdk04NmZ0ZVRZaWdjak1IcVFVWkVPc2h5QkF4VG90aFdJNlBjeE43bmlETkxaNG44SGVLT0FtQU9SL2ZueFIzQWNEekNzME03R1RnTDFaKzlNUWt6QldCK1lrMWhIT0NZVHBrZU1WWk9tUVFFRzhaUktqd3hxa0Q1aTZ0NzVwclJ1VFdaYUdidVF3N1NwMHBiblNOdk1RaTh5WExVbVFOVWsvZ1c1OHN6MXdkdlN5cnpKUnBudVBOSyt3b0pSMUQ0T1A0UEJCdERWQlNvZXBxM3poVllJL2JvWDNmUjRoSi9JUVFBWTFEaXpQckJEWC9LdHR0S1hreFlCUWljUGJaWXJCV1Zpb3FKWm5pNHlZWllyYmpha3FzWWFBandpSThkS0ExQTYyUmhhWXZOYUZxdEsvSldZTzZyRUpkUzU2Y3BoWTdjdFZHeTMwRVV4bzFLOHlOdmg5ZzdTNDdzKzlYWUE0OER4MXIwakpnYWFyOW01S3FCUGUzZzVOdUlESEF1T1RQcFphK2xwVGVNNitnR3A0bjhEd3hzVGdBNmRpVjZpcnJ5VjMzb01td21wdkNNWk5ZZzBrTmJhVm9sd082dEd3RU5DaTBjNEtxSy9SSW80dG1RVHFPS3NDV3RLSjBmSlRhM080eTM1VmR0VHhQVk9iSzZqb0xEUTJPVHBVeUErYXdBdk8ra3owTjZDekx4aFNsaVVvdGV5M1JKcTIwczEvRVBmdFQ4Yy9sZytCNlpLZFZ0VThBczYweDIxTWFldHZSanhMVTB6TFFFUU90U1d5S1NTMHlFSlZWb1N4dW8rcUtUdlA2QTBjN1N0MllvQjVnUnlrNm51MitWV3JuckhJSythUnBSaEQ0QkVYK29NMnlXV2ZTekwwb0hxUkVsNnI5d25WUFpnL0tuZ2EwNy9zbUVPS3ltbGRZbTQ3YnpSWituaUU4SDFtVHlKcDBHU3BrWkhoa2VGQ0RmR2ZPYVdEZkJ4R1FVUXkyUkFBWjVHbU9NYWFhZk44bnN3YkdocFpxSXVkd2c4czBkWTZSY1VJNEI4c0xMZG8xanpEUFNIU01HY1lFbnFQY3ZnZlVZR2hqL0xwUEtDUjVuaEhNK2N5bGxtRE9kL0VucWNhT1l1d29CZ3hxWHVMWGZOS2REQVBrTlI4N2wrSFhBNHpuWGxGQlE1RDVrUG1PY2doZmtHWSthZWE3bk11eGkvbUFPVnF5alRjSGdnQnZEakx5YllBVDkreVBIdUI3R3RDZi92U1pITGhjZmxmekN0VnVvbG9UOTdSZkN4REZBTStmTXQ5NU5ZOThuSk5POGVQTXB1UlpQcFBxVlBMejZkU3MyZG9hSlhjZVlBckhUREsybUhIS3dNeWEzcVNRVlp4MCtUYnhoSWNJQlY1QkhWUVFvdW9TVlhCbWsxNmIrcFFhdUt6Mlg4NTFNVWhWdTBvamhJMFF1U0NSODRJd0RKRHpBck50cjBvNTIrdXlad0g5eUNOdkxjLzkwcldXcTNhUkVWSTRVeVo1aE80UG4zYWRaMk5MTnNXWmZYOTI4SGk5UDczZFVJUkJXSUU2S2V5N2JhbFlYbWl6dk5DdWxvV0JzemVYL0hpNkdNNVY1MTZzcStvU0dRaVNxYkdCMDhCRjFvdm5WejFaeW1zcnl5L29OSy9BZlMweDI5WDF2dnhhMTdqWFpNOENtdUxjOWJhdUFGMDE4Q25Bck5yTlNqdGJvN0ZHazQvekN0VFQ0aGVjT2NzeVBOKzdLaUcxdEF1YlVWcVZEUU1INGpBSWFhdDJCZHJyU1JpRUZkY3ZvOTZtbXdXSlVGVGFXVTN0Szd3TzhOTTh1K2ExN0JhNUlKRUw3c0ZxTHlya3ZJRHkvbW05L3VmdVlBL0pudVZOWHVFd01HUEdmcHBoeHRUOE9aL1dvV1hNbFpobUFlUkJ6UTNpSmhyYVFBMHlzc0xDVVRnaGl2SzAwOVU4NWJ5aU9kVzExWitYTklJUU9kOUVoZzEydkNFTkliQWpqYWdyN0VoWGR1SlNoT2ZNYnJhd2h0U2JqWXBHU0NtWm15KzF1NnZGUVpDVEpCb3ZWSWdkUU9SSUVaREVHVkw2VmJvWXFkUFdWYlgvNHAvTTUzekN3R2VZYVVMWEhnQUFOZDlpR0VVd0xzTVJDOHRKSm5LQUwvM3gxL1pGNXZlZUJmU1ViT2hkV1NybXlzUUNJUmNVWnFxTWJGQ2JmZFVMYi9MS0R1dXk4dVNWbVNRQXF1bHE0NmxHR3psbEhRbkR4a3dHdUk1N1VOdWxNWE9xOUt2VUp2akNyelJ1WWxQbWNtWXFOeVdKcmtKRjVieWk1WHRFc2J1ZWRyTTUwNjRDcUpvTHdXd3JDMVZrcW1pZ2VjRFp2eHV0Rmt0TFMyeHViazd2WW90OUpQc0IwSytVcllwNzBZQ2xXNWVSQnhxWUt6SHlRQk5xR1dGRGtSUjlzc01zSTcyR2pUbWNjbHkwRnp0VlVIM1pXRk0xMnFobUM1bFBGVXpjVmM1QU5UdUF3UllQbUpBU0c1ZEZabVNSSk90NHRra3RvWEE1ZjZWMmx2VUFLVHZGdmd0Yjl0WnNYUFJVY0Q3V3BoV2d5MlpEVVd6UVV3OUk4MENiUnN0cDUwYXJ4Zkx5TXM4ODgweTFQSHNOZS90ZWxEMEY2RWUrNTFSWmM4VXJmQWNvS1YvWnJhR25SUzY0UDd3RWREcTJNdzZZWnJPTXl5Z0diNm81azMydDQ0ak9rV1BWOXlRWkVvWVRLNG9kVFRYNEtXSThSUEdBVmNBT0hPVVFnYXpvUmpuUUcwMkJ6NHpTS254MFd0cE45K0NVbWhvY3NFdHdUM2ZPVXJ1cVJJbFdpK2FCTnNNb3FqVDE4dkl5M1c2M0hEL05xT3U5TGpjOG9COTkrRlExY1BYbTRETy9lemFIU1hFVXZSV2ROOGFNeS9ETDNLYTFZRjdDZ3FTNWZBdWUxblM3WGFKeVVEZlZINldsRkFPLzBNd0ZnOXkrck9HeVczZnhRQk01TDJnVnRETWRSa1NSQWNxNkdSc2N1MlVxeUNjQnlkVkJQMWtSQXBxWkJGT1VWeWlaYkhjNFN5RUdaclpBZXJuKzJrQURIcnNMallVMWFCNVE5R1BEMnBVTTZlVXVYN0c4eGdWSjYxQ0wzZ1prbVN0YWN5bU82VVlEVm80Y3ZXeTFqdGhIY3NNRGVscmlLOUdqNzNyajBmY1dYei94dWErdGYrV0pKODYrK0YzZmRlSkZZOHdkMHpIRnF0bEVOWnNrV3M5d3hwWlNSRVc4eFVCcnpDV2ZwVmFEeldqSVVxdUIzYW5SditJQXUzaGdpSkNDNXk1c1ZOdS9maXIzYjJWNW1mWHVKTDc1NkhJSEhVZm9lSUFxNm5hVXFWVGxkMTlNenJIWDc3TitlVUlwTmk3MWFSMXN6Vnh6eWY5ZjZqbmNHUjNUdTZMcEhGQjBXb29GNGJQWWxHNGFTdlRXTnRGUTAyb29vcUhHMzl4azhYWExMQzVkM1RaNWJXUDljdmY4NE1LZmM5djNsT3daUURkYjdVZUJUNXZFQVNqVitoKzg2NDFISC9qYzE5YS9BcndJVkxVNVZQUHFVbDNUMGxLS2dkWU8yR1BvRGlhVmloWVBUQUtJK2xkaUJxOG0zSDNiVVo1L3lWbTNOamZjZkdWNW1aYzJ1OXgxeUIzcnlIS0g5VzZQWm1IdUs0RzgyM1Z0bUF3cWUvMUxsVGJkdU9RaTlOWTIzZld0dmVybXQwd0ZOSzMxQmxXYnVkNFZCL1NOTklNTldHeEtEalZDQW0rT2FLaFozU2dlTks4TDNNZmk2NWF2ZFN2K1pQckxYWGU4N25iZkYyOTQ3dXZybjdudXpidkJaVThBK3VodHgxaC9hZlZYQUZTbnM2VjdQUUtsRmxLdG56NXhZdm0rZHJ2OVdhNVRVYlBiN2M3TTIrME9MYVU0MXVtdzJ1c2hwNndjVGtOZnZZOFN6Tk95VnV4UDJRbC9QN0xzdFBkdUVFLy8xcmVPUWZYNkRzQTlmTll2OXF2MW1nY2FNOXV0OVNZYWZLWFRadTBWZDl6T0FVWHZpcVpkOUF6dkY0UFA0QnBGT3ZxdmRxOEg2S3JkMi9GYjJ6OEMvSHpxczNMaXJxTXZKaVA3Mk9xRlYxL3NIQXE5M3FXOTA1UGxoZ2IwbzQrYzhqN3plMmZ6eDk5NTZxZVYwOERqSm5ZaGRtYXZuRmF3RUhoOGxwSDUzd0F2R3hreWJaRE5KdG1jVHpiVXpCbUQ5RHphelNhRE9HYjFsWmpscG1hcDZYUDZTSUNVTFJZUHVwRFQvdVUrY3ZFb0FLdUZKbDdyWmJ5NFBxRVZYV05ZbnJKTmR6RXN0OXBrV3pIMm9zK2dPUS96OHd5dkRHa2NhR0RIZmhWWkI1QmxtdWhLektBWTRBMEdtanhKaVF2UFhmZmw3dXhObVBxSDF0WWlUcjErQXN5akJ3T1VkZHZHU1VvV3V4WkZpVW1SZ1NEYXRpU1JvYnU2eHVKUnQ1MFpKd3d2SitPb2EyckhqaDk1SHVENGN2Z0I0TjhDdEFGUkUzZTJsSG8vOEV1Kzc1ZjFUL2FFM0xDQWZ2UVJOeGg4L0oybkRnTy9TRFZzZythQ290RlFIa0QvMWQ3eHRjdURYd1R5bFlQdEdjK24zdElNNHBob09MSGpIcHNObDY3a1VQc1FoOXFIZUNseTREdDJ4QUU3RUQ1M0hPbndZdkVLRnpzWm00UFpTTHR1TkdDNVBjdDlyeVY2cERGWEp2UW11aEl6VExJS3pOT3ljb3Q3YUpxdHlYNVBIcnNOV3lURkhsdGFZblZ6RTlPZlBBQnhraEp0VzlwRktkM29HdnVkbHRYekd4eGZEaitncFB4azllTVlmT2NGZlJqNHBlNnJXM3ZLNFhMREFocWNSZVB4ZDU3NlJhRDJvWS8rM1BpWnB6NVhlL0dwMzYrV054Y1VLMmtyQjFpN1BLakFySWNhMVZEMHVqMmk0WkJCN0VEVW51TFd5ODJyQzlJc0hsemtPKzV5ZFZkS0RSMEdzNDZTZEZ1emZMQko5M0lSUmxvQXJEc29hRVkwb0htZ1NhT2dEbFhjODVTV0hsd1pFazBCdStsYzBSeFpWS2lGaWNsdzVaWW1tVHpFeVdPVHRMOTJNZkJkZlhXWEp0OGxneVNsTlMrcUpObmUyZ2FkbFNQbDR2Si8vN2RBVFlVaFNrcTBNZXpNZWRoWUF6enl0cjkxOVAxZitOUDEzMXArM1lMWGZYVnJUMmpwR3hMUWp6NXl5dnZNNzU3TmYrRVhmdnJPRDMzMDV6NXc2cDNmUGY3RXgzNmVzMC85SVNVa2gwUHRBRjFvNWJYQ1dxQVdWSlhwQWRCcU5HWS9tNnZqbUV2cFgrNHpLUHIrcmE1dnNMcXhQdE9aYWxwSzJtSE1aSkRYSFVRem1ycDVvRW5nTjY4SjZtbHBoRUVGYXBob1oyQUd6UDgxVW1wcHNlUjRmZStsOVdsQWwxSlRVcUttckVQNWFFYXJ2d2Y0cmIvUUNmd055UTBINklmZWVhSUc4T3YveHllODcvLytELzIyWEY2dS9kclAvRXorN0IvOG5nZWdXcE9iSDNXN3lGdVc2VFRiSEd0RmtFT2tZL3dDMEhFU2dlL1RhcldRaFVjdG5IT0twdXdZMjAwelZ1TWVaLzZ2ejd2ZmdidE8zczNYenozUFhTZnZKdDZjSFJDMkNyL0gwZGVWUmMyZHBteTFpdStKb1hsZ2tWQWVvdDArUWlJanNvc1dHUVF3c3BqdGJVZ3NqTngrNWoyZmJKUWhDaDZ2amVYNWx5ZUR5bWV2UE1lNUwwODhleWRlUHd2d2p1OXlKdHZ6Z28zSXdLNldHSFk2T1dGb01EVllPWHFJN2d2ZkJHRHB3REtCbE9qK0FHL2JFQnREVTZtOG9aUUhmTSs3N3JuTjY3NjZsUy9mRW5wN29XSG5EUWRvZ1B2ZWZKcjczbno2YTg5OCtjenhULzJQdjVDekt5cHcrYkQ3VTd1dnpLYkR0WlJpY2VucTBielJ1Z0kwd1BybG1JMkNCMSs2ZkhYYTF2dCs4SEh1TEFEOXlYLzVxelBMM25idlNUWTJlNndYWnJWMjhYeEZVYThDOVc1WnZLVkQvK0prWUJrTm5mTmtFQnZrZ3FTemZQVjI3M2p3UVQ3LzVKTVZtSC93SDMrSWMxOCtTeDczT2ZQTUM1TnJBMDRlZm0wejVmWGs2TEVqQlBPU2ROdVFibC90YlcwcWRieHY5SjNBbi8yRkR2QTNJRGRrK09pcE4zOG56M3o1ekl1ZitMVmZ2dTQ2UzBkdUF5QXE3TWxBbGN2WDMrelMzM1NhVXlwRmE4b1pzbjQ1NWd2ZjNHRDljc3g2d1lOUHYrVk9mdk1USCtIMFcrNEU0SmMrK2pGKzV6OStpbC82Nk1jQWVQamRiK1BzVTUvazRYZS9qUzg4ZTQ0alN4MGVmK1JCM25idnlSa1FSOUZyRi9Ic1grd3hLTXhyNWJ5VXNybjhPeDU4c0FMek94NThrSk52dnErYUFMN3oxRjNWTnFmdnU1T1RoNXVjZXlXdXBqaTUva0F3N3ZlditidnVEM2IvNURXVnlnRnZjVUhkK1pvWGRZUEpEUW5vczEvK1k4NSsrWTgvY3QrYlQ4TTF0UFBTa2R0WVByekM4dUVWQnRjb3lMSzR0TXlsVnpmcGIzWXhVOHMzVjFjcnpieGJ6dnpKQzV4KzYxMHp2OTExOG00QXZ1ZGRiNnZtanoveUlBRHJyL1k0K3JvT3g0NmR2RW96OXpZMzZMMzZYeGRtL09CakQzTHkxRWsrLytTVGZQN0pKL2xuSC9zWS8reGpIK1BrbTA5eDdzdlA4TkVmL3pEbnZ2d012L3lKM3dFY21EL3lvZmZ4ZzI4NU1xT2hOL3FhamI2NzV0Y0NkeWtsbUlQNXExMzJoUndDV0Z6WUd3a0FOeHpsZU9LcDU4WUFILzM3ang5ZmpYb2VkYStpSE1lT0hHV3BwZWhmK0JyOUMxOGp2clFKVnhKWWtMVEdDYTFibDVCUzBsL2ZRSzkza1lBY0QyRjdpTFlweWRqUThEenVQdVFHYnAyMjRtaGJBcG96di9VN0xOOTZoTWRQM3oxN1FtR2JQLzdNNy9QYi8vdS9CNWhwUmQ5N2RZTmp4NDRSa0ZVUkhNbldnTVhGRHRLSFFYY1Z1VkNRYnF2QkRDQTFlR1FFZFo5NDVMYTc2ODY3c0Z1V3AvL3dhVTdmY3plZGxSVmUvT3F6eE5HQWgwOGNvLzlkOTNIdVQ1OEg0Rmd4NXZ6QTMzNkFiamVpZTNHQUhLY3NGZjlrQktUV3Nyb1pzU2dGVW9JWnVZSHU5dXB6REJZa2Q5ejlIYnp3eFdmUkYvdFZIL04yV0hUSXJVRTgwalRHS2MyRkprYTRKT1J6cTVkdWVQNE1OeUNnUzRsMjVlTWRPM0tVWTBlUDBPK3Uwci9rWWpQNkY3dFF1OXIrZTJsam9oMjFMVHZEQm5RVU04M2ZWZEdCZGVub1VaYU9IbVg1MWlQa1hwTWpoUTE2WTJOOWtwcDByM3ZsRDRhR2ZyL0g0bUtIZnIvSHBkN1ZaUzM2VS9YcjVMWTdScjkzZlRQYlN5KzlCTUFEMy8wQWk0MTVBSG92dmNTNXA1K21WMWdOVC80dDk2Qmx1cy9xaFRXZS9NT25XYjJ3UmtkSmpoUkVmdjJ5WVZGT0JvV0haRUJZZHk4NE04cElSdGZHcEFxOWFuNk50SzM0cWcxdVlMbGhBVDB3dW5UTE91MTgxSm1jWnNCY3Jsc0F1RjBBOFhxaVJJRE9yaDRFYnE2dnMzUjBzdTNHMUFQUks3aDQ3MVYzWEhsZ2tjV2ljUG5pWW9kTHZUWGk2TnJjdEpScE1NZWpqR0VCckdhUkpiTjJZWTBQL3YwUHVuT2NlcldmZk9BQjJOWDhxTHY2UEt1M3JiSDYwa3NjdTMyRmRoYXpmdG10Yy9TZ3hPYXpaa1paSEtQVTBwc3ZyYk44K3hHV2J6OUM5OElHdW9nK1ZOSkhTWjltUFNUZWloa09oelFYbWpud3ltdGUzQTBtTnl5Z3J5V3I2eHY0eklLNWxOY0NzNXJLVUZFeVFKdTBxbkJmeGtKc3JxK3p1YjZPcWUyeUdFekZhblNtTENqOWZvK3ZmLzBjSnJxKzVyMTBxVWRZQUtvRWRRbmk0UzV0K2ZRZlBzMEQzLzBBdlVKYjk5Ylc2S3lzUUxnd3M5N2lQQnk3ZllYVllyMzF5NGFOd2RVV2lrVXA2QmUyU1ZuM2tmVWNNOG9vbzYyWGJqdEtkeXFLVUpzTUpYMGF6bTVmMHJ4WGdCZllRM0xEQWZxeDk1enlQdjNacy9tY1RjL0xPZjk4SUlNN2dkd1l2SDYvUjJzSEdnY253THJ2dmQvUG1kLytKUE4xajVhUWRBY1JOdG11b3RLWUMyYXZjdXhBWGRLTlFWRktTODQzTWRzeDRjNHNPRlI3RWRVNmhHbzdPN0dIeDR2Zk9FZnY1YSs3N1haVk55MURnK1pNaEtvTDVMaFlwaVI2WkVENE5JVlA3cGV2ZG5lOGl4c3ZjT1lweTRuN1R3UFF2dnNFR3h2citMMk5tVGRBVmhadExLTDVlbGNNMDhXVFJDQUlhaUJEbUVjZ2k3cldzcFpCbHBGYzZRT3V1SHVyTFpreGNvNGhxQWNvVkpGR3dmbFBQM0gyMjVUalc1RlBmL1pzWG9MNnh4NDcvUnh3SjBDdjM2WFg3OUk2T0FtblBIbnl2akxWazBPRkdROGdubklMMjdHYlNwbDJPOGdGQlZQUmR1M0ZJOGhHRTltYzhQS3k5YkVlOU5IUkpTNTFYMlJhWHF0VWJ5bGxqUTA5TXJUblBRYmJPYTNRSjBwbStlcm0raXI1amsvbjZCRTZSNDdTT1hJVUNUU2lQaHVyWDU5YzMxUzdpdWJDckhYQ2pLL3lyVndsL1ZmV1dUeDhsTHZlQXVxVk5icXZUTzVYbWJsalJnWlpsMmNBSHYzdWUydWYrY05uOTBSTXh3MEg2RjF5RG5nL2sxY2d2VjZYVG1lWlRzY0ZySC85UzA4RHNIajQyaTVpTmZWL2l4cXVNMWJCVThPR0l0R21TcW1TODdOZ2hnbVE5ZURhUERtY0x1bzRsWituNmdKVkQ1QzFRak5UMU5tb0ZYYm9BdFFHVmZVR2w2R2l0N0ZPYjJPZHpwRU5UcjdObVF1YnJVV2E5NTBtanZwa3c1aEdvOFZ3Nkx5SmZzMFFEeWUyRnlHb0d0eXIwTFZ5azNWQldKUmQyRTFPN252TGZWVlVkQWxzV1pjWWQ4NHZYZk9pYjJDNTBRSDlwOFY4eGhiZDYzVTVlZEpaSGZxdnJNMkFPZjV6Z25iazFLQkxMaWlrZEZTaXFsbTNLNWJaNnZpNllLNzJVMmhwV1F1d085bE1YbDhKWmoxS1VQV1FlTnZRQ3QxYlliQmR0cFlvRW1JVFRXbUc2VzJzOCtSdnJuUHMyREpIanMzYXg1dEY5c3R3R0YybG9YV1J3cFZPNlZNenNpU2oxUFVwRENkdnBFdXZiTURoUlpZT0wvSE1uemlQWkJSSHRJcUgyb3pNbVdMVlBXR3lneHNVMEZrUlpEOHc1b3ZLY1VBdkMrYVFDOHRzZGxjQmlJby9MRnpvMEZ5NnJhby9rZTh3MnlEZW03eldReEhRS3Q3SG5TUE9hdUszeTBGZ29abXppWllkWElueE00TXNFbW4xNVQ0WlB1bTR0QXdFVUV2Qnp3aDlRWkpaR3A2UHJEa20zWkt1NnFtbytVaS9oaDBicEFneGFZcjBjOXIxakFRd0l6ZGhaOEhaYkVvR0Z3Y2syMStqWFhnN1c3YzQxaHZnc2RoY3hGenBzYlBqVlE2a1NlbGdkMnhUbkdzWStKZ3N4MWk0dE5ubE8wN2NBWjdIdVRVM01Pd09pNVlYTXNFVEVrL0lGMDNPT1lEUC9PR3pld2JRTjZTbmNFb3VBRi9SMnFDMTRkaXh5UkRtbVdlZnVlNUdwY2lwY05IcDZrTmxpbFk1VDdkMU5RMnV4QXl1eEt5dXJjK0VlQUtvZzR1dVhWb3hnV3MvWElJWlFBcWZNUEFJaTlweW91Wmp4eGxCelp1cFR5MkYrUC9iZS84WVNjN3p2dk16OVhiVnZEVzFYZHZGSHJaMk9OVFNRNjlJVTFpSjVvWTZSaHRMVnNTTFFvaUh5eVVNbE5pT0xSeHNDUDVCbjNHd0RGT1hTM0s1czA4d3pvcGhTRHI3RWpzNHgxSE9ObUFsZ2syRllrSkZNZ1hHTk9YVlNkNFRSWEs5STYxM1BNdmU2YTNlNm5tbjMzbmZycHI3bzk2cXJ1NlpXVkdLWmU4cy9BQ043cG4rVmQzOWZaOTYzdWZIOTFzMkxEV1BkN0c4am1OSkhFL0JyWlVpN2ZmUlNqSGMzRUNQcHNkVjlhaFUxMEZyLzArcUc4Q2V0NDJ2WFdhak1aRVR0Uk5zU1dsMjRjQW4zT1IyVXdMNnFhZlBGWSs4NjR6MzI4K2NLNEF2UlpHazMwOVJTclBpVW1lYlZ6WVBCWFVGWkoxTmYvaXhOVFVKZVdVcXl6QTdDanRXcUVFZk5lZ3p2SjR4dko3Uk9SN1RPUjRUM2RhdEwwQU41SGtMaFY5ZWd2MWY2VHpSK29ISHZEaTluYmsrajNaY2JrZ3JzSTZWUW84eTlQWnMrYjd5M2pLYUNuTldmTmlIQWJteXk1YzJ1T3k4OUoydXZkVHhWRjhBZVBUaE16ZmxXZnd3T3dvSCswV0FDdFFoeklCYXVzTEh5aHNPN3FHcGFiY2FZRllOb0ZlY2RvSGo0dWk0b2RYRUFYcllvQlZRMXdZb2JXWkREcWFBa1NKZ2JDeGg0Q0huK3Fpbm9ONFBNTG5ZQ0RzYUZzZVNJR296Vm9vd2loaFhWQXpPUTh0ajAxN3Y1djN6TnJhdlBXSlFvN1RVU1RUalQ0RlRVejVDZHZNQzJvV3kydU4zZmZnL0FQSzJaQ25IaTQ5M3lLNFBrVDVzanNDMzA5MjdsSklDRCsxaTdJb25JNVorU2NEb3ZKMlFrblk3cGpDeklPaDJ5djVnQUJGS09vMTR2TDhBeHBYa2U1MXlZNVlFczAwN2QzZHZ2K0hITWlpMGF5V1Zua2ZpQkQ3VFlvd01OVTRNaTVPbjdrSjJ1c1FWbWN5MVBuSXhMclcvQWEwenRNNlEwb25jUjh2bG5HSXJ4TzRWdFdmZVE5VHF1c1lXMEpZSXRjNnRVd0FBSUFCSlJFRlVLUW45OGxxMklWbGVRWTFTdHRJTnRPeE04Z1ZCTWJGZmVlSDVMMDhlUHZ2R20vSXNmcGpkdEFmNzFIODZWN21WQzhDRmFxc1dIKy9VMTlYdDEycVJxOUxGY1V5N1hRR2hROUpiSSttdElhTU9rWnM0OGNQWkRkcmcxY3NNWEFkZEJlYmUzQnpoL1BIRUt5ZUpWL2FuRTN1MzcrOS9Uc0tRVHFQamJjc0ppTGFUSHUya1Irems0dUs1dE9KNHJFalRQcHR1czF4WnhZNWFtVG5FU3dlekdqQVRnR0ppbjNyaFMxKzdBUERNYzE4K01odEN1SWtCRGZESVh6L1RNb0NGcHd3d1g4Sm9IMDg0K1IxZnYxMjNBdkpCRmtiVFFrM1NXeU9RRWorVUJGTFduaHBnY0tXTU13OERjM1U4c0IvSXpiOTd5MDc2ellFNkhVOURtaVFNNmZiY0JIcS9UQlZXUUc2Q2VuVjFqVGp1RU1jZHdyQVUvNnhNNzVaN2hTWUJaQVhtS3E2KzY2NXBFYXBwd2FMMFJDc2duNWdQSC9pQUkyQTNiOGhSV21HQkFENFZ3T1B6ZDhiSE8vUWRiZGVscjd4Y2c3dDlXMEoycmN3bjN3ak1jU01MSXFNcFFBTjV1SGVHRXN3VnNJV2ozNjI4Yy9jN1RoL29sYlBOUzdSWDdrSmRMVituditVbVh1WThzM0loUkFYbzdGcS9CakpBOS9oMGJIMDBLdU9USk9tUnBuMjBMbm1yOVFGeWNJSHYxWUNHc2lHcU1yT3JDUlpsQVhpK2pGNSs0USsrOXZTK0Z6Z2lkbk1EZWkvbnlXZStXRHoyNk5uTEFLZnZmOUM3OUlYblp4NGlscHdrc0J0QVRaWVRobGY2VTZuaFNDQ3N3UnJMQUZoRjQrY2h3b2xUZXI2c0Jld0JUS1puL3RaYVl5Y0wwQ29CZkd5NXkxMTNUd0Y3SXBrZCtSTEh1blJPckRXZVh5NHM2UmFBbGo1cVQxQW95L0xKQkx6WnpJdDRkWU9kU1k1dVNkWXZyaVBhSFVRd3BKdDBVRUZRaTkzSHQzVUlsaVN2Ym00Z0pVVHRpT0cyUWxNV1ZYSVJZSFlObzd4azlxL0EzRmxPeVBkeXNpd3J5UUxEQ0FzTXR4V1I5QWtXUE84ZGYrV1VwMVNaU1huaEs2OGVxWkRqNWdaMHcwN2YveURudi9oNWJqUTlOM2gxazJocGxyMHpEM3pFQVhKdjZ2cVF5SVVJeGt4QmJHMGxyU1l4WmxvbzduUzdEQThZWVhweGZUWjI3YWF6WTFqcTJzYk0zOWt3NVkrL050dERmZEtsM1M3MTk0OXdEZEloM1U1U1hpY2RobGZITXd5bDhiR0liTHVjZ0svZVNZMFV3ZUwrSGhPeEpPdXpVaHpIWk5rSXBTMjlUb1RTMWhXS1l2cjlqWDNQUFNwMkpBRDk5Ny8vUnpqL3BSZkE5WFNjZnVodDlEY3VjZjc1WjVFclV3KzVkZVVLMGQxcis1NmYrd0hDV0lTeHNDaFExMU9pNHducWVvcUlTdkJXQVBZYlpJb1ZNV2VuMnlYZG1rcTV2SGh4Q3NqMCt0d2d3akhZZU9VOEFLdHZPRTIyTWR0OWVXMnZmUDBMbHk1eDZtVHA2UThDY3RNR3czUUs2c3JUTzRVdW1JSWFTakRQZlBiRzhLc1hoc1J4bWVyTFhPcFNhWVBTUHIxTzVQV0hxbENqemJ1aktQNVI0UCs4NFVIZHBIWlRBOW9hNndIRjZmc2ZmT3czZnYyWFBJRGVuWGNWZ0hmKytXZnByWjdFdjMyWmdldmZXSFlNbTUzZU1tbS8wWElaK0JnaWdoc0l3bGZldUFMMlBNdnMycjMzc3Y3U1MzejVqNmRnZnZIaUpWWnVuOTBjcnIxcHVxQTJYamxQZTJuV1UxNjRkR25tOXViMmRGTjRzdGNqelRScHBrbGlTZUtxaGZOQUxxK256OHUyRmFNNUlKc0Q0dWltaDg2eUVWbVd1ZjV3Q3pDSnBPK3BFVThEUDg1ZkF2cGJaME05UEhQbnlidCs5L3dmUG4vU3YrLzBtOVB0YkNKdlh5RXp0aFVNTTRMRmlEQ0tVYU1kUEc4QlUrUlFwZDBtQ3lBbCtVZ3pia2xHcHBReUcrMG9pZ1ZnUjlQcHJlSzVrR05zTlN5VTRrSDVyaUhBNHJ2YzlhbHZ1eFAyTEY5NHVXemxYRm5wMUJOZER6eFlOa3VkdS9CVm9LUXVBQWkwejVVckRXNjhMQ2NkTjhEV0dDREk4ejZaQmRtV25EelJJNTlBNUdKbXZaMFJIWXRyUXJSOHQ4RHNXUFQyR0wwelJwc3hlakxHNUFiVm1JM1ZqVHg2VjNaSVhjOEdua2NZU3ZTd1RIUmxPbThCT3crY3VlOGZBUjhEdnZOam56aDM3djU3bDcwdnZuUTA1Z25oSmsvYk5ld3l3RE4vY1BIK041NTV5K2NwRjJJTG9IOTV3MGxMSG1LTnRCak91Nms1VDYzVmlHRi9veGFwdCtPeXI2TXlxeFRXUFdlbDIrWGRiejNMU3JkYlh1NVlZZVdPTXV4WnVXT0ZlKzhycWNRR1Yvc01ydlpud2Z4cW4zUnNPSE5ud3BrN1ozVy9lN0drNzByZVo5K3dSdmRZTkROcHJScjlHMHFwZloraGFjRU4rcUh0cm1hNFZYY2tiZ003d003SjEzZC9DM2o1NWZXTnh3WWx2ZkNYQVk0U21PRW1CN1FmK05XWCtjSFRmK1doa3cvL1YzYy9jZDhERDM2SkV1RC9PeVdRdndKOHpqMXVrZzB6UnVuaFF4WUhnYUVDTW9BYTlHZkFYSGxuUDRvd2plYzljTSs5UEhEUHZaeTQ0d1FuN2loRG5hcWYrT3piMzFrRGUvUFZQcHVPbEdibGRUM1d1bE9Rcm5ValR0K1owSE9oeGVrN0UrNDlnSFFtT2xhR0NXbzdtemwycFJUWmptSTBMcThyTTNiL1lBTkFuSlNMeUYrVTJGMU5aM25sazI5NzY3My83RzF2dmZkMy85Mm56djg5NE9WQm12MVBMNjl2ZlB4am56aW5IM243cVVPNURXNVd1NmxEanFjK1U3WXR2dldCdDE1NjZ3TnZ2Zi84SHo3L3ZjQWIzbmptTGZ6TXovL3pmL2pZdzJmZWRmcWhoeXJTN25jYytrSmFReGpXSGhxbVhqbzYzdXhxRzRFeCtBMWg5OG96cTM0ZnF4U2JjNHRCeGt0YytkTXJOYWdyNjk3ZTQrenQ3OXduK3ZQaWwxK3NieWRoUUNla0JqUUFyWWpCdHRySGc2RzJ5MFdYT3hXdUczbm9nNndDc3hxbCtOVUV6U2g5TjhlQ0Q1MThmZmNuejd4eDVUZUIvd2I0T1BDL3ZlWE5yNVBkVHZ2UTE3dFpiV0Z2N3dDRzc1dmNQdjV2Zi8yRlgvMi9mK2tTZ0pUaFQzZVBkMzU4dVpNOHZqVk1pWmVrcDY1bjlGMEhtUjVwT203ak5ydzZSRTQwa2ZTSndxRE11eDZmNWRkdE12Z0RKWjhHa0xwTmw3WTVRNlhvT00rdDg5eWx3RExpT0dibDloN3RNR0pqMEdlMTJ3T1g3eDY1dk81TEwwOUhxZExyUTRTM2gvQkRjdXRVYU9kYVNyMHdSclQ4V3ExS1ZCeDY3cXlTWFU4Wk9icmdMTXNZVDJEWUlKaEpYZjY1Mit1eTNGdkc1QjV4TzZveUkxdGYvSVBQWHo1ejlvSC91UDdTK3Z2U3dmQ2ZiMTRkLzlSci9pRnVRcnVwUTQ1NSsraEhmOVlEK0R0LysvdmZBbndJK0I5Lyt6ZWZ1YkRjU2VnZTczRHZYZnRUZGdCMjEySWJySnBLVzVUYm1LbHNWRjhBeHJ1RzhhNUJMdnJJT1VXcG9VdU5kYUpvUm9PN1NvRzEyekZ0NTkxWHV6MUc0MWt2bXFtTVRxZFJhai9lSVlpU0dzeTVtUjJRaXNLQVltTElKeGJSOHJGYWtjN2xpS2RaQ3pkeDh4cmFSbVBuL2VOajBiOU11cDJmUHZmY0YwZ0h3d2MycjQ1L2FtVWxQRktZbUxlYk91U1l0eC83c1g5WWIxQ2UvTVJ6enpYdWV1Vkd6ek83NXNCQ2c5SVdhN1VUR0dvVHhURjdqazYzSGx0eXAvWUt6TnBZdERYSU9ibmkxUU5vRkZhN3MvRnc1cnhxcDVNd0hPN2prME1FMGhVNHBtZVFzUllVazRiMG04cG8xbTdzWkRaUTFuYmFhU2Q5RHc0QmR1d1lXci84bGMybmdiclV2Ymw1OHpPTTNzaU9GS0J2WUJjQUJ0ZkwzTEc2UHRzQWIzY1A1bmhUWTdPdlliOGFLcTFtOENvZ3B5UEYya3FQb2RKMG9nanBCMmhyNnM2OXlsTldHN1I1TU1kUnpDZ2ExYlFDUUEzcXdEVkk1VWJEcnE3eXdxaXh3UXVuZXVWRnkwZEd3Y3dtZHNma3RYZitKdXpxTi92RW05V085T25sL2UvL0lROGcyMUV2cDZOczBqM2VtVWdaRWljSmVxelJZODA0enhubk9YWlNnQkJvUUFnZmJVdU9hSzhsR2U4WXhtcUg4V2dJb1VSN2dwRzFETGRUd01kTUlBb2podHVHbFRnaWtRR2hnRVFHbkFnbDBjVFE5VHk2bm9kc0NYcHhYSmJRcGFUczFDNHZxNzB1Z1FlQkI2OUxPblNqa0xZdk9IRk0wdllGSm9lMEpVbGJraTNLUzRhQVZvaEdzTjBLQ1QwUElYeDJqR0hIR0l3eFNDbkpURTVteWxFcms0UEpvYjl0Q1lFUWFFMXlvcVVsd2xBV01wU0ZtZVNGbWVSWEFMN3p6WGZkS283dGFIdm9uLy81WHlrQTBsRkc1OWpCTy9Jd0NHcUcwaVNLMEx0Z2lvTEFPM2d0MjEyTjJSMFR4VW1aM3Bwb3JEV2xuSElZa1Y2ZmpYUEh1Mlg4MjNkOGRsRVVzWHppWUJhbjlGcktWbisvY0t2YXRhaGRRN1RvRTNxT0FHZXNTTUtJOGNTZ0ovNE1SVUpsMlk1eU5BbTJmcDM2TmQzTndKMkEyZzArazZwVVBocXByd0swTyswakhXWTA3VWdEdXJLUC9kcVRGeDkvL0hzdUpPMzRGSzdmbzNON2w2R1RTMXZwZEdab2Q1dGdWdHVPTTZNZGxyY1g5N0M3dXRZWnJIVEJrM2JuUUkxd2dGNjNSMis1UjMrcno2V3Z2Y3pnMVhMajFuM2RLb0VJU0oxY1J0SUFWVVVOWmhhbkN6RmFETEI3UG5waVNScXB3d3JNaVl6UTI3TWxiWFZJT0JVSVpoaVY1czJWeXI5NitDT09wdDBTZ0haMklSMWxOYUFQZTFBa3lzeUZ2eUN3THFVV0haT28wWmlvSFdKM2RaMm50YnVsZC9iOVlLb1IzaElreHhNNnh6c2t4eE04ejZQbjR1VmV0OGVkOTU1bThPb0dXMWN1TTNoMUF5azdKTGNsckowcU16Q1ZGTWFnZjRLdC9oWHl2YjNhUS9jekJTMmYwQStRTFo5MHJKQmgyVmtYdG54U3JkaXZCTTZNV0wzSm9ScE9DUTVwQmE4YW1hcnJaMy92L0Y5NjZKdkZmdm9ENy9QS0RqUHZxOHJhMW5LN1c0eUNNWVVYb0FFL0I1VmJXbnNsVFZia0IrU1RIRm9DRU9pV1g5T0JCWlE1ZWV2SVliSnRUZUNITmN0S04xa21DQ1NlbENBazZmWVlXMWdLYjRxSGZNOW45WFdyckw1dWxjRzFBZEhTMU5QMkJ3Tjhyd1RmMHBMazVMZDlHOE9oSmdHeTBaQ056WFhHV2pQV3NMY29TUllsMUxRRU9XSExJOTB4MFBJeENNWVQwT01jY01RMUU0dmVBeFpBQ2dFTEh1eVZLeWp1bGVWNTZlY01oa09BQzg5ODZybHZqSlg5Q05pUkIzVEQvcjNkTlkvVFB0dzc1eE9MNTlLc25qc2Y1NDI2MG1hcWlYd1l1UWFlZG51YWtlZ2N3bURmYzJwWWZTZHZNVituNmc4RzlCdXRwNUdjZDV0dXpySGRBZFlZWEU5SnN5RjZWeE11VHVQamlvMnBFaEN0VE9kNUNkNERUQXFCbmxqaTdyUjRWR21kMzZwMnBMTWNBUDVpZ0YvbW1DKzZmM205T1JuZ0tvL2J6T2NDaUpZZ2lVcWdoTDVIRXZrMW1MTnR6Y2Jtc0s0UVZ1bTdlZXRmeTJvd1Y3WjFiY0RXdFFFdlhYaDVCc3czc3N4eDFjbEZTUkoza0l1U05Cdlc0VVFabHV5UGx5c3dONEV0aFNEMFBGSjdRMG1La25majBiTkhIZ05OdTVVODlBVjN1UWNvZWlkT2VBRHBSaCt2RldBZC9ZQm91Wnl1TFJDVkhJTURkYXBzN1pXcjY0MnJRNGJicXZiUVVrSzJvOWx3N2RiTnZtU0FFNTM5VVc3L2dFbVhqcU1YRThWcytPcElFbXVyZ0Z5UlAzNDlhM3JyMFBOZ0w2ZTl2RHg5L2VuMHpwRmtSdnA2ZHVRQi9UUC95MGVLOTcvL2gxcS84SkdQVGQ3Ly9oLzYwaUFiM0xPNnVvcklBcUp1QnpOUzZDeER1Qm5EMFk3R2p6dmtDeHFUbDVXL3Riajh3ZU1GVGRTZ0t3MUR5VnB2eVBtWDFrRXJVcTJRRFhMRWt5ZFc2YlJtZXorRzI3T0ExRnR6WUhiZitCVTMzRHQyUE5hOU9LYWZaWXgyU3NCVnc3L1pqaE9yN3liMGxqdG9CQ3dldzJ4cjlBUnl4OVZuRU9pOUhIWTFNcEpVa1U5NDJ6TEx6Y2FwaGJ6UVk5M2lDQkV3ZmlOMjVBRU5JSnhYRWtJOE14eW1mM2QxZFpWMnUwMldaWVR0OWd3bFdMNnI4Zlo1UVUyMEtHc2U1OUFOQjZUcGtHNEFwKytkOW9pWXZEeEQzL1c2T3psNVlwVkJPbVJybUxMc2VqU0N1WGcyejJjOXVKbHI2ZHk4dGtsL05LTHZqckYvYmVTdXk3OVByaVl6N3orWUcvbUtXZ0kxeVlsOEQzVkltYnZiNjlaVDVNTmgrZm9kMTBtbnRUN3dPVWZWYmdsQVYrWjUzc1U0anRuWTJQQldWMWZaMk5oQXhqRnlOSm9CZGJGYmVta0FKaHBseGtTTEpZOXpWREhlUzRtVWtyN0xGL2VXRTNyZERwZjcwOWU1ZEdXRGt5ZFc2VHFPamtFNk83YjFXcXdYeC9UaUdGWlhPYit4UVZpM0lKYzhjN1dLbHJPdTIrQnREY3JZdkFuaXFDWEltMmVZS0p3Qk0wQ2FacXl0clpJNDFsVXBqMXpMOHczdGxnSTA1Y2F3eUxMTVcxMWRaWFYxbFkydmJ1enowbEI2YXRGZzF1K1QwbXZQaGc5aEtKbmZDdDcxdWp2NVdvT2pvNXJHQnVnbUhSSTVIMFBQZXVpbUJ0Q2xocnJzK1kwTitsbEdPQWV3dnRNUjdIVWJSWmtEWW5KbEM5UWtiNHA4SVNQSmNxL0xWbjlRWDFlV3B0bkJzcmRIM0c2SkhlN1AvZHovTlFIWTJWRjZxU1cxOUFUckw3MWN4RUdNeVExZUpDSHBRTkxCTHZob2s3TXpVdWl4QmlURGthWS9WS3h2cGFnZHc1NkY4VWl6WnlGY2lyQWVqSFlNL2FzS3RadXgzSW5KaFNrdmVVWlI3RkFVT3lTZHNOdzFTb2txakx1ZFlCWkNrSW03aEdTNUJSbWlKaVdQUm44N0kvVGdyazdNaVU3SVVtdUJmS3hKcnc1aDF4SzFnbkkyWndMcFZrbzJHcU4yUVNPeHdURkVaNW5jODJFQ0N3dmw1ZGh0TWNuclQyQnlpMmlCeVMxYVpVaUpKd25JdFYzNkMvM1J2a1YyU3dDNk1tT3NnVklvTXIwK0lMMCs0Tjc3U3ZiNzd1M2RmWS9QcmNWT0xKRXJNNnV4WWpBYU1XaDQ4OVZPajFoR1pGb3gwb3AwTUdRODNoOTNkaXZ4ZWFjRW9NWWoxRTZHMmRYWTNURXFTK3R5K2tobGJQUkxMNyt4V1piSm5mcFVlZjlvVEZhVjVLTm9xcFhvTEIycE9vMG9seVI2UjZOM05MTEJ3QlM1R0ZsZHo0aU94eWpIZFIyNXpyMStlbVBxaEtOcXQxVElFUVQrem5BNEdIWTYzUTdBY0RnZ1BENExCaThJS0l6TFN4dURXZkFJWEcrem5WZ0cyV3p1VmdTQ3RnTkJwaFZMeHdMMGppWmxTTkx0c0h6Yk12T21kaklpcDl1aXN0bSs1OEdjcHVIcVNoa3JiMnh1a0cxbnFQMXQwaWlsaUtJSXBSVEQ3ZkYwME9CWWhBYkdiaEJZNzJqQ0ZrUXVQbFpwaGx3S0tTZDR5Z1hVU2VKYkZzeHdpd0g2RjMveFgyMC8vcjczMU80enZUNGd1QnF4dkx6TVN5K1dvMC9DcGJrcVVBT1lPV2FscG9jT0k1L1Z6djV3VSs5b05uZXVvTjFHc1BMUXdXSkF0RFRsZDRvV2wvQWRaYTdkSGROMlpmWlJOVUsxbmRWZXVyTEtPemYxVS9yOVBrb3Awc24wcERyY1ZoQVU2SjNETXhYUjhiZ0dNNEJ5K2ZqSWtmbnBRNXFianFyZFVvQUdrSjcvcHpyTHZpTTN4b3ZETm1iWDBEbWUwT2ttREsrbklBUkNDR3p1c2dPVEFzLzFTd2dFMis0SFYwSWdmWjl0MzJQZ1NHZWtINUR2NVJTVEhLOGxFQzNCNXZVTWJTd3ZYaTZ6SWRVNFgrTE9EQ3UzelpHWHViUmR0cVBJeG9vOE45Z0cxYTJlUUJDSXV0UmRsYmtIU3JPbHh1aUp3Tm9DMy9jSmdvQnNsQ0VDZ1hVVnhYRXJSTFo4UENka3RQN0tPdW5tcG1OVkRkRXFud0FCNU9WcTJUdGlqT1pmeDI0WlFELyt3OS9uZmVTWFAxWW9QYVU4VW1ORjdtYi8xazZ1OFlVL091QjhEbGh0OGFXUDEvS1F2bzl1bEl3SHF2Uit5MUhwWlNzd1cyMG9XZ0lwZzVLTDJZMDBEWGNNNlhWVlU0UzkrTFdLaHJjRXRzZnMyU0JwUzRKQVlOem9sMmprc2F0U2R3WG1nZElFWG9EdnpqTFY1TGR0ZE5zbHlXeGZlTHJwMmxRcnhpWFBRMFpSUFZxVzUzOEo2SnZTR2lYam9YTERxVW9yWkJTUXV0R3N0Wk5ycE5lR0RQdjkra2YxcFYvVC80dVdnTjJ5ZjFwYmk3WVc2ZnN6b1BaYWdzTGxmdk5Kem1BclJTNEd5TUJITGdhczNkVmpqU25uM1J1ZDBGRi9XSHBhMHlqcVZGd2F4dVMxbDY0QVhiV1Vac2F5cGFhcFAyTm1GNFRkTlpoZFM3RG9FN2x5ZXBxT1pxN3I1MnBOdFZ3cTNaYlBmT2JvS0Z5OUZydGxBRjJaR3BjZXVvb1ZoOWRudmJKV2lrNnZWM3NvNjhCYTlYV0VRVkFEK1NCUEhYdGxzY09ibEtGSHB6MlhnYml1Nm5CajNucWRtQ3dUWkc3QnhVdFJEVkJqY29KQTFFQ0dFdFJiTytQNnZTdHJndHJNeGNCTk1BK0hHWjFicTI3eWRlMldBZlRZYUE4b2NsMXNBK1NxZER5K2k0L1Z0WlNvbTZBTGd4NFpPdTN5dHI5YnhkTGxsWEV4cFM5OGZPSFhHai9SWW9DZUZBU0JWNG9oZXVWd29Kd2JzaFVMZ2l6VGlBVkJISGZRRTAxNmJZaS9HSkNPTmNsU05QWENaa3llKytVa09SWnRjclNHMUUwQkRNZGowbTNOY0Z2VHFUZUlPVXljVTIxNUJJcysvbUpBNEdMdXdCMS9mK0EyZjA0VVNXbGJEZ1JQZEV2a1FSSHM1Y3QvOWN5cHp1K2Z1L0NObHpkdllydGxBTjJ3T21WZ2pRRUR2c3ZQcWtHS2xDSGFqQm1PVW1RUWtrYzUxZzNnaVVETWFBZEhTeEk5bXY2akYwZmc3ZTNMK2VvR0RWZmhLZHF1NHBobFE1VGUzemNDSlpodlpNUHhtTlE5ZDIybGZMMjBra0J1ZVNXb0p3V0ljc0dhWFl2ZE5lUjdvSGJLejlQclJwQzd5WFpKT1NoOGk5c3RBK2hxWTJUbllrd0EyMGhyV1E5a0VESjBjZzR5RUJTMndQTTlDaGZIcWgxTjVCcVVlbkUwMDRjY2hpRmhHRFp5djNOa010bVFyQ212dkRCM3poZlVmU01BRks2SE9mQm55R3NxTUNmdGtNNHhPZTNpcTBBcGZaamsrRUV3c3ltc3dCd3RPWS9kT0lQNExZK0NhdXdzdm52ZkYzVUwyQzBEYURPVmVmcFRPQmpZTU4wOGR0b0p3MUdLNy9sNHZvZFZGaEdJR3NnSG1kbzFoSkZFTHNtcGgzYlpDZWxHclZibW5xTW5jem5pa1c3b2YrdDlRSzRza1pKT0dPNy9oV3J2WEkyUjdZK2pveVZIVkxQa3c3Zzh2Z3JZZW5iUTkyN2czSmt6ZDN2bnpsMjhKZHozTFFOb3F2VFRucEVBdmhEWTNSeXhVUDUvU2wwZ1VHT0ZicFdnR3ZrQ1l6UzIwRVNpZzdSUWVCS2JDNWlBa0FFeUtEZVoyc0xZNXNoQzBISEVNbUpPU0RPV0VTTHd5VTNKSzkyTXNNZldNTXFHK0NPRnQ2MW90MEVialRhYTBCZm9uUkVzbGowWkoyNDdoclk1WVF1eUhVT2U1OFJMQVFNMXh1UnVxaHZJaXh4OGdUWWxNWTVzU1NJWjBPdVVDOHcwTnJaMmtpTkQ2ZVc1SWQ4ekFHV2o5T0ZreEVmT2JoMUFUKzNRd1U5VGxHUXpBRVpiQXVuWFRQMVJRd1dyRS9vemxGcEJLd0E1elp6TVcxWG1CbUN2d1BNRFBEK2dzQVpEcVRNdUE1K3hxMGpHN1lpNEhaR05GS0dyYjFRc1NtTXpkWlJKNU05VThySWRnKzhMZktkU3E1VEZGdVZyVm94UHZia01TK0JtSjQwdFN0M3h4Z0tNNHZnT2Q5UGpGbW40djJVQVhSekNtVkdaelhNaTMwZFA4anBGTjk3V0VJRHZOd1NDM085ZGdibFJLc2EyTE1OR1did1R4N05nQmtUZ0l4cU00eUhVUUlZcHlVczJPbnhRTllsOHBDL1FOaWZiYVR4M0tTQXpCbXZMWTdNMlIwL3NES2xrTDVrRnROOFN0UUxXdkxRYmNBZFFaMGh1QmJ0bHV1MXlOd0JyZG1jZGpTOEVmcVA2Vm9GWnRBVGhzUkxJbGZLVmJjaER5SllvYWJXcTE1MFkvTmFOZi9oSXhqVkJPa0JoelF6QlRlZ2ZQaE5ZRlg4cW5YQnQ4OXBiWjY2ZW51MlVZRGFtUUxuTWpGeWNldkg1bkhqVEtrOWRFbFBXNWZqVjZsQnYrTUdPa04weUhqcXZzZ1ZTRmdBaVY0aldsS1pBdGlUNUhyUmRWQnY0SG1wc1NjSTI2VWhoTUNUdHFDeDZWSlFGTGNnS0FTWW5kdm5zY0VFd0hKWEZrK0YyU3RKb0lOSjJXR3VMUTdtWXdza0lKbnFxUmQ2Q0xaVWhQZGdZRFBGOVNUWTI1SXN4L2VzWlljdldBRjBBVkpHajg3eW0vODBMUzFIazVMbXJMT0lqVzRKdUoySTVpWkErQ004bkx5eDViaERGZEFIbms1d0NNRmxHM202alhRenQzMkNoSFRXN1pRQmQ3RTFQelNJSWF1WjlXKzZaaUlJeUlSRTArTEg4bGtBM2VoblNrYW85ZUtYOU54bzNUL2srYWVZODd1VSthM2YyNkEvU21XbVM3UHBzblNMd1lOQ29WbGJEcXh1RDhuSDk2eG45Qmx0cXRwc1RMd295Vi9DcDBuRFZiU0ZLRDMyWUJYNkVzV1hUVS8xOU9EQkRDV1lBT3hvUnhPVjA4TFBQL2RGZmV1aWIzVVFRa0J1RDJ6OWg4aExVeWhiVDAyL29NOW8yckszMFdOL3NNOXhXTStGSnRxM0lKNEo0NmVCUUk4MFVpdG0wbkhBcHVYWW5ZVFJNUWNCV0ErVGRPWUg3eXZyWDkxUGlacnVsWjFZN3RzNHJIMlNWZCs1Mklvd3Jxd3NSSUR3Zm1DNklmRzZJMW1UWjhtT1BQU3pWdGpKUGZlcjNid2xRMzRxQTNpKzB6WlRuTGZBOS9FYXhvZUxiU0Z6OHVYbDEyb0FmTjJMU3lsTlhKK2MwVTZTWklwbkxXMGU1STZxNVBpUSszcW5CWEhscDNVaVJYUjZrcUFPODdlV3NmSy9LU3pldDZaMmp5Q2VTSlpnckU1NlBFSTBRWXEvQWFGT2ZlZVpTZExlcGJlVTk5YW5mTDk1MjlrMnRaNS83b3lPZndMdGxBRjBIRWdLUEZtVUFDb2o2V2lBcXJyZEpxVlZvalVXMEpMYkk2UnlMNkJ5TGlBSlJOL2lyN1F3TjJEMUpGSVFJVDFDNGJ5d2JhK0pRc241dHhEZ3ZXRGtlc1hsZHNSYVZSN0p4WGJHcXh3eHJpSlRBejNOWWJ3eXJqaFk4MHVzWncwelJPZDVtNkNxUWFrZWp4aG8va01oamdteWtzTHNXMmZqRlZtNC9RZWRZQ1Y0WitFZ2hFSXRodlpFdDN5OUgrZ0psVFVteDRFdDBOZ1JmRW5YajVieHo2b04vNCsvOXdJZWZmZTZQTGdEY2ZmZEs2K0xGelNNTDdGc0cwTndnbDlya3lxaEdtYXF4cHJ3QTM1dmV2OXd1TXdDRHVTbngvaWdsTWhKUndHbzNJVzU0NWlzTnJveU51ZHRSRkxIcFpPWldrcmdHODNyZlVZUkp5ZERGME1Qckk1UjJuWFp1YnJHU09yYTdGbi9SaDl6MWQ2K3QwdW5FTU5Fa1VjVFlHbVRnZ3dXLzVhTzB3azRzbnZ2OHRqaUVpaFFlQng1LzlJZi81NCtZOU5LSEwxN2N2SEQzM1NzdGdLTUk3RnNKMEFDSXhlREUxM3RNME5qVkI2TDBYcEVmWVBLOG1kS2FldW81WXBxTlFjcHFZeU80MlFDeE54bHo1L0dJeSs1L3NabUdEVjlZMzJBODExQS9uSlBQVUhNRHVFRVF6TFNMZGpveFNkS20wNG5MOXRCanJoZmJsZER6WFVQUUNzcGlFQ1VWcE1uenhxTE5rWTZUUkdkRGxwWkJyWDhPT3p6NXVOODUrY2lidnVlRC8vVGl4YzEvQTBmVFc5OXlnTWExVStRSGFGMEhRbUNOeFZoREZFVUVmbEJUN0thT295NFFJZDBHcU8yZW9POGFtZFN1bm81UVhkNGtEaVhHbGpGTkRlckplTVpMNyt6YTJrUER0T25vTUZNN21xalJ5VmVCT1dwSCtJcytTUktWbmhrSDdrVkJxaFNKeTM4SHJRQXptWUs2a29NTGhNQWNNSjFpaDZYMnVFa3ZBWnd5TzluSHpyei8wMy9OYmp6L0V4Y3ZiazVXVnNMVzV1YjR5SUQ2eUFQNjdNT1BscisrdUJOZ0VoOWJhcW1TN3FvQVBBbVE1M1VQc3ZROEJDREt2Z2IwUk5lYWcwM3J4akhkT09iVllZb1VDVmtscTd3emJmc2M3MnB5VjhoUjJoREpnR0dXellEeWtxdnFLZGRUSVJmbVJJcm1adnBrUzlMSXVORjFHNzdFYlY1WE90UEZGa2NTczFzMk1wR1hSSTErcS95TTFlZ1pMWit3NVdNbUJjVWVCRXduWW9Jc1k4L0hveVhwYi9UcHRmcUYyTG8wc1gvNEwzL1VmK2duMzM3LzkzLzB2ZEhKNy83U3l1MWhqWlBOcXpjM3VJK2s4T1poOXZqai83MlVMZk9KL3ZyR3UxU2FUUUh0TEFoOFpDQUlnaW03a2Q4Z0pKZStQOE9kcksxbHJNYzFtRGZTSVdJQk1qVW1jMU1ra1R1MVY3SHZQR3UrMXBiSTkydEFld3M1MmxheWE0S2RvbVF6amQwQ3FLS0xybE9YamVQcDhYWGFFZUhjUUVGbktTcDdQa3pPMkJiSVJiL093ZWZHWXNueFc0TGh0cTdMNEdyWDFDMng3VHU2cUV5aFJvcW9IV0dOQUpqNEQvMWtTNnllbmNpVy9xbitmL2luSDFFWFB3dmMvSUErVWg3NlhYLzlMZDdULyttRm1ZM2YyWWNmZlJENEh1RE5qNzV0N1hRNk5GVU1QVlBXRDI2ZzZLNGRpcVR2STRPQW9WSklmL2J4bzdFbWxoSXg5NDFsVGtRb2tnRlI2SmVBYWZSZlYyQ3VyaXN3YTFPVWx6a1AzWTBseSszcGdqT1VRSzQ4ZEMwQzVJWjJnNFpEQ24yUGVmZFVwU2o5MXY1Tm9kbzFqRGRLamc3bENrYkJZZ3pRc3M5L2FDTCt6dGtXOEF1OXYvRlAvcWE2K05tUHFqLyt6RlA3WHVRbXN5UGpvUjk1eC8xZXBmMzlsa2Yvd2NtQnZPOTdnZTg3TVh6dU5NQ1orMHJ1RE5reXhmcTVGMnN3Vng1YUNFRVErSFdoSmFwNDdCeGRRZE8wdFdVN3B2UFFRTzFmTUhuTkFBQU8wVWxFUVZTbGQreHNERHplMXZSVFZYdG9hL1FNb0VYRE93TXplZUJPNUZNSVFkdGxUT0lsU2VBdHpMeitVbHcyUDgwRGVyVlhIdi93MmpZeUVHaTMrVFJ1VTVrYlc3YXhGaFk3eVRGdU1LQnFUdXBucWdSMEk2YVA0cWdDZEhuc3EyY243Yi8yWTgwbGZDRms4K1BwaGVjL2R1NDNmdTVMMVQrVDlvTG4reEg5YTl0LzRjV1pJd05vZ0wvNnQ5NTM2bXV0KzM4UStBSGdEcm45TW0veG5xZTczSjRBWHJjYmUxZXVRdi9TZXYyY2lCemZGUm9DNFNQRFJ0N1dMM1ZZWk1ON0o4Y2pOcThPNjZZZll6UWpseHZPZHZabklEd0JRNWRhUzdjVnczUjJ0R29mWFcwREhyMGt4a3dNVVlPZ3NUbXlGVWxKUGxrZ2lhUFNTN3Z3b3prVUlQZEFtekhhTGJTcWwyUTl2VUlVU1BKQ29KdEt0SldvcHpiMFV3V2VaVzIxeDdrWDExbGJuU1hVMGJ1R3pucy9EZE4wcUJkNEdxRElkOVBmeTNlSHY1WnR2dlN2UjY5OGx1eVZ6N3JQVjFFUi84V0VKamMxb0I5OStJejM1RFBuQ29BM3ZmZGZQQTc4eE5hMk9RV1FiUDVPSWJkZjV0UnFyL2JHOTl5N3loOWZHS0lhdlJNUjFkQnJVQU82QXJEMEEyaUFJNGtpRUtYZWQralk4bC9kR3N3QU9taUl5MGRSaEd5VlFLNnNJckRwYjdtZWlibHBsSnljWG1mYWNtb21CWkdVTTBEdUQxTjZqbTlhZUdJR3pOVnhqcTBoOUFQMmR2TWF6RU9WMWh0SzVmNzM5UUNkYnBlVnpHclJWQll1dXI2VmUvNDdPbS85SDZwL0Y4SnVnZ3ZueEdLQ0tjWVhnS2V6Vno3NzRkRXJuNzN3dFhPZm1RQWtTYm1SL1BNRzlrMEo2RWNmUHVNQlBQbk11ZUpONy8wWHAxVHk0SWVqOVBPUEFHeGZPVjhrbTc4RDdrczl0ZHBqTU1qb2RtTzZ5MjAydmpyTEhWZDU2TURKdVZXQXJyUzZLdzlkcGIzU0hWV0RHV0M4bzhoMjlJR2dyZ0FOSmFpVFl4RzBvRDlvRUt5YjJSZzVjVklYZlpmSzgxc0JTdXNhMU1xRk9KR2o1YTBBRFNYb2tybU16SjRyajJ1cjBXYU1jcHZWQ3RDK0ordXhxNkZXTXlIUCttWUtucVhUamhpT1ZMbnBuT3VOM3JReEo5N3pzZnJ2d05Qa3Uya2RXdVMrYk81Vm5tYWlmejI3K054dm5QK3RuNm1BWFVxRHBIOCtHdUkzMWFid2tYZmM3d2tocUx6eTR4Lzk5Rm1WUFBoclVmcjVVd0RSOEFYOHpmODRzOWtiT1BCMGx5dTJ6U0hSWEFPUXphc01oSSsyaGs0VTdST2diODcxVlEzelZSdG52Q1FaamNjMW1Kdk1SZkw0YkZvTm9OZHQwSC9OK2FlbUprc3ZpVW5kVlBsc3FCRzZhNGxjREdhOE04eUdTT081Zm84b2tDaWppWHlYTmFrSEZneXk1Yy9QRk01NC8rcGF1eHkrWEF6QWd2NlQ1NUd2ZndnQXNkZ0I4UExkQTFtbzNnVzhLNzc3N00rZWZlS1R2NUZkZk83L1NkUHgvMXZkbVNTaEp4WktSK1I1RlAydFAzdVEzM1FlZXVYaDl3ZmRsVFh1ZmVDZFB6cllYUCtGTDc2eURsQWsyeTk3YTV1L1E1UFJ1OVRpSzMvY3RiWHlGUDNpS3lreUVFalhVU2NYUkVPeXdrTUlVZWVkcFIrVTFBVk1wemFxYnJ2QTg4ck5uRHRkcDZNUncrMk04V1I2QUhKUkVJUWhRY3ZEVEFxQ2xvZmZtQ0pVV3RFOUZrMkpZNHhGT3lsbGF3dk1KSzhIQ2FBY0tyRFd6RWk1OWVLSWFFa1NPUUhPb09YanVUMUJrUnZ5WFl1ZUdNYVQ4cnJLaTFzM0pWTlZKcXNGdTlGUTdNcXVLNzc5bnBOc2JKYVpqdFdWSHNWNEZ2QmFhOHpaZjB6Kyt1OHUvK0UyblhwN0U5R1NNSnM4S2Z3RkRlQ3hFSURuNzVBWG4xTi84dnhIMWVYbm4xWi84anliRnk5K1N6VXdiaXBBUC9iRXI3NloyOCsrRS9peHdlYjZxYTByNjJ5TUdtQUdaRFNYZmxxWWVxdE9Jcmx5VlNNZFNEdVJqeWdFdVN1c1ZJQ1cvalRzT0FqUU5zL3hoU0J5bm5pNG5kV0EzaE1SMm5uRnBCMmc5d1NSOUtlalRwTWN2eFZnM1VMd0ZxRHZObzNSWWtDUkcweWpqVE1BeG8zNXhaVzJaUDFxR2RmMjRvaGUwcTdCRENXZy9TQWl6eTNXbENGRUU5QmlUK0Q3d1hSR01jOW56ajd6Z0pZdUJJcVBSYlRiRWVHZUs3eTRNR2d3SEI0SWFLdWRoNTc3T1h5dmdMSTMzU242MXNkK0VYZzZiSTlOOXRMblhnR2VldUZmL2VNL2N5V3VteUxrZU95SlgzMnpmUDNaOThyWG4vMEJyVmtHMkxxeXptQnpIWTZ0ellRWWNrNTBYcnYxV0hub0sxZW5Ea0Nibk5nQnRRTHp6SE90SWRnVFJIRlU4OE1GbmtmZ2VUTjkwWjFqMHhBaUhVL0JMQmNGV3Blc1JIN0xuVDNkS2IyTWpjdDg5cndjbTdVRlVlZ1dvZ055RXBhVEozMlhEKzdGVWMxQUN0U1Z4endYNUxtbGNHRlVCV1lBMlFvQVVjczVBK0ROZXVpbTNmZm1OWXpPYXc4ZEg0c0lKZ3VvOFhnbTh5TCs1TE5UUUR2elpWS0Qydk1hTWh5Q2FpNnovS0dtL3ZKdTRJZUJJcjczdXdCNCtHYy8vWlJaLzRNUFAvc3JUOVQ1N2Q1dG9kZS85czJISW45dWdIN2tIV2U4SXRjOC9leVhDNEQvOWtmLzE5djgzdWwzeTl2dmU2OTgvZG4vdXZuWXdXWUo1dTdLR2hzanFMeHpaVTB0dnFxL09CMk9XVnRMT0pGSXJxU2FqdE1lelBOaUJzejFadEJZWk9CamRpM202ckFtT3F5czh0Sk5TOXB0YU8yUU5oaEUvWllnY09OWlpsTFVuaGxLYndvUU5XTGUwZGhNd1V3WlpzaWFNNk5Fd3RydDB6MUFGSVl6dlIyVmVTSWd6K2ZDZzBiSUVRUSt4bjNHNnZNZVpFN0VucmJiZUVaekdpOU9SdmxBODJWQ25qZHk3a0lDR29UN0x2Y001RGZFNWlPOSs3NzczWTk5NkQ5L3N2L2laei84N0s4ODhWVC8ycmhZN29UZTF2Q2JBL1czUE9SNCtPMXZuTFlxMzNFV2YvbStlK2c5OVAxRXEvOEFPRmw5ZlRiUEowRHJoWmN2a1Z6N1BBRHBiUTl5NXJrZklvNGFuaXFjQmRuWUwzLzgzckxrOUgwSm4vejBPc09ocHVOWUNxc0cvQ29ra0syeU43b3lHY2labWJxa29TSWxBNG1Vb1d2RmRIR3dVaGhqNjhwak5nY1VzZUJoQ292TlRabGRBVlJ1OEJjRWRpK0hTYlVJeW1QSUVTaWxhcThxM0NoWnRCUVJoUkhSVW9UdkI5UDdoVmVUNWFUWkVEc3BTOXRLRyt3a1J5eUltZmRYNDBiTWJuS3l5UmkxclluY0xPVEFNVEt0cmQ1SkVzZWNPQ1puam1jMHlraTczODM2UGYvRWZaOHByb2JFMklKWUtCZUU1d1VVaGFuN3p5dkxyYTd2TzhDS0tNZ1FRbGNZK2EydEZ6LzNqL3FmL3FVNkZObThtbjVEd1A1ejhkRGlqck40cTI5OVJOeHg5c2RCUGpKM2Q2R3M5WUJXMEFnbjB0c2VaTzNDTHhOSFB1Mm8wZTQ1VjlXcjFuRi9TM1AreFlQNW55c3J5Nzg1bmlmcXpJZHhnS3hBUGJhYTBKZklvUHpCN2NUVW50Wk95aC9aR0lzeGxpVHBJQUtOMGhZenlRbGFnanpmSS9BY0RaZm5RekVGZkNTQytodXZTdEY2WEhiK1dldlh4MUtCdVdsUlZBSzdZbE1kTjFwYXF5cWwzeElVZWZtK2dlZWo3T0ZVQ1pFcnIxZUFIbzR5RXRkbFdDM1dnOW9GVWdWSlJBM3FDcXdWWUt2dnNkcVVlbDR3ODdqbU5lQVpteENRRmtKb2dQZEVhdytlNmIzelJ4NXRndm9ic1c4NW9PWGYrdTFIZ0I4SDVvRU1nTTF6cjhvb1JMNWZlK2ZrMnVkSnJuMmU5bTNsRDF0NzZZVnB2RlpsREhyTExyZTdwVW1Ta09Gd2RpTmRlVVMvVmJJaDJVWTdtMjF3WmpSQlhWblUydCtKVjUzT2xWTFRUZVVCdlJJQS9vSW9nVHgzUE1BOFIwYlpQQ1ZtUVZRQjJWcFRwZ2tYNVQ3NTVPcDEvRmJwbmFzRjVZc0FBbE9UcVZlMjlvWVZsQU55RXNlMVNrRDFmZmgrTUhQV0duYmZVZC9XQmpZTnlLQUU5dGplbU5wQkNIOG1OR3FBdVRaakUwOFVtc0JQQytCVXRQYmdrMnMvK0tzLzBmLzBMejBGWmJydnRlYXgvOHg0T1I1NXgvMHpyL1hJVDM3aWV4LzkwUEQvQTU3a0VEQ0RZek9DZmZIcTJvVmZCa29nTjBNT3VTaVJUbDlRTG9ZMW1DdnJkR1FkYmxSV2c5bVpMd0prSzhRWHN6K2N0UVp0WnNGaXFuN2lsby9mbXEwU2x2Zm5Mc3ZoRWNucGNRYWVqeWtzeWkwZWYwSGdMMVFaQklQUzAyekhQSWlxVUNOYWl1cUZveHBkZ09OZFhZUGF1SkNqV3JRVm1PZHRIdFFBYXJTZkFiVmFQSy9GVWdWNWJoSENSNGo5N3p0UGorQjVBWjRYSFBqNFBKY1ltMVFZT2dVODJYdm5qendPWlZHbXFqeCtQZnN2OXRDUHVoaFpBSSs4NTMyZXZlZnYvMTBacm4xQTNQYm03OHpWWll3WEZXNFA1TWtXNk1rY0I4UmVVQ2YvMTFORGV2N2ZBZkRRYXBkVGNjNllDcnh1TTdmZ0NndlZrWXNHZUZ1YUYxK2M5bkZBR1dQN0U1Q3RrRmhLeHBPOEx2K0tCVUh1dVJrK2xlRXZTcVNRV0QwbVdLZ3lDNlltc1JGQXNPQ1hOd3JLdWNYZEhMT2JZd3RMNEVkNERYSkdDV1YzWFN0SFRjQk93RitzOHR3Q1UrVDRqbnN2cUZoQmd3QmZDRVFCZmlDeDd2V2tsTmhkamMwMElWRGtKU1Z2MGRoMDZZbkZhNVVkZjVFTWtBaVU4RWt2RCtydlMyME9XYjg2Wk8zYlR4TEZQaU9seXZ0Mk1waU1FUk1Qc1RBZEJsNGZRMThaMUtJN2pzb3hCREY2T3dNWjBIS2ZvZFVTNEc0amZGZ0E0WHNJMzUvcXlPemxGRzdidHVENUZIdFRQMWpzK1JpcklLL1BHTDk0OW9sUC9rMzExZWQvSWszSHJ5a0UrUy95MEErL3ZTeFI1eWUrQzN2L0J4Nng5My9nU1JtdS9XYWVxKy9NYzRVUUVhR1BWNzJQbnBSa2g0ZFp6OFhLcCtLY1U3RXJOaXlXR2liaG9rKzRPQzFSVitYcVpFbVN6R1VCM3ZuT0J6aDllbzNEVEVvZjJmQ20xbms3dXp2dGxGUGpNV3BIejR6K1cxZDBzSVhCRmdhVFd3SVhUdmllajhuM2U3YWc0VEw4Vmdua3dJMURSWDR3TXk0RkpZanI5ek82bHJDd3UrVnRWVjBjdjdUWFlIT3FibmVjbkxLWjdQK3VmL0NIdjQrMWJ6OXdNTDdjREg0ZFNyWHhhSVIwYVV4NUxFWlBCR003ZTNhdHVGRG1mMnJmOTJqUW9zemNubjZJTm9nNlRWb0FqMFRmOXRCTFo1LzQ1T00zUExEcTZhL2xRWWZaTTc5M3JyRDNmK0NVdmY4RFQrWW52bXNtdEJCaWYrd0pFUHBpSCtzOVFCUUkxQUZncjRBTVV5OGQrc0VOYWJYT24xK24zejk0Z3hpR0FXRjRZNmFnWnZ1bkhkc2F5Sjd2eld5MEFsR0MyQllWMEdmQlVCUVd2MVVDT1pJbHVFM1JXQ0N1aWxmUmpGVlVZNEUvQlhYZ3dxdFN3SE9XTEgxKzFoRm1ZL241dVA3ZGo1MDk5RE5QUTZpRzNNVmsvd0xWMjFucG1adi9hNEM2K2drRFFkMnFXNnAySFF5MUExbWJwcUJ1UHVrWHp6N3h5U2RQditlbjMzem9oK0NiQVBURGJ6L2pQZnoyTTk3RDcva1I3K0dmZmZHRCtZbnZlb2tHa0N2UFhGazZua3FkeVZicG9UZGQ3Q1piZ2lpbzVCbHkxQUZ4SGt5OU5GQVBoTW9iTk96M2VzbWhIcnJ5em1FWUlLVlAxRTZtdmRFTnEwQmRzUTdac1VXMEJINWpRMk55aTdKcUJ0UkNCQlNGcGFoQTdrSU5LSUVOSmFpYndBWnFUMjJOcmhsUi9VRGlMOG9ab2FGNUt5YVdmR0ptUEhYNVhyUDdocFU3U3gzRlQvK0haL2U5eHJ4U3JaMVl6TVRVUkpXOUN4K2tkK0dEUU9tVjB6bGRSZGtxUDBzNmRtY3JBY3FVbDZBbGlFS2ZvQ1ZRWTR1eUVQbmxCYVpwVU44UHl1TVFqVDRZTVNlSkI0L0Vkei8wek5rblB2NERoMzBmL3ovSVZSaFB3bWRLdVFBQUFBQkpSVTVFcmtKZ2dnPT0=
        hashCode:
          type: integer
          format: int32
          readOnly: true
        allergies:
          maxLength: 255
          type: string
          description: Allergies of patient
        anamnesis:
          maxLength: 255
          type: string
          description: Current anamnesis
        status:
          type: string
          description: Status
          example: I
          enum:
          - I
          - O
        consensusFlag:
          type: boolean
          description: Consensus flag
          example: true
        consensusServiceFlag:
          type: boolean
          description: Consensus service flag
          example: true
      description: Class representing a patient
    VisitDTO:
      required:
      - date
      - patient
      type: object
      properties:
        visitID:
          type: integer
          description: The visit's ID
          format: int32
        patient:
          $ref: '#/components/schemas/PatientDTO'
        date:
          type: string
          description: Date of the visit
          example: 2020-03-19T14:58:00
        note:
          maxLength: 65535
          type: string
          description: Note of the visit
        sms:
          type: boolean
          description: Sms of the visit
        ward:
          $ref: '#/components/schemas/WardDTO'
        duration:
          type: integer
          description: Duration of the visit
          format: int32
        service:
          maxLength: 45
          type: string
          description: Service done during the visit
      description: Class representing a vaccine type
    VaccineTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 1
          type: string
          description: Code of the vaccine type
          example: C
        description:
          maxLength: 50
          type: string
          description: Description of the vaccine type
          example: Child
      description: Class representing a vaccine type
    VaccineDTO:
      required:
      - code
      - description
      - vaccineType
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Code of the vaccine
          example: "1"
        description:
          maxLength: 50
          type: string
          description: Description of the vaccine
          example: BCG
        vaccineType:
          $ref: '#/components/schemas/VaccineTypeDTO'
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Class representing a vaccine
    UserDTO:
      required:
      - passwd
      - userGroupName
      - userName
      type: object
      properties:
        userName:
          maxLength: 50
          type: string
          description: The username (must be unique)
          example: John Doe
        userGroupName:
          $ref: '#/components/schemas/UserGroupDTO'
        passwd:
          maxLength: 50
          type: string
          description: The user's password
          example: 21@U2g423
        desc:
          maxLength: 128
          type: string
          description: The user's description
          example: Lab chief technician
    UserGroupDTO:
      required:
      - code
      type: object
      properties:
        code:
          maxLength: 50
          type: string
          description: Name of the group (must be unique)
          example: labo
        desc:
          maxLength: 128
          type: string
          description: The description of the group
          example: Staff members working in the laboratory
      description: The user's group
    SupplierDTO:
      required:
      - supId
      - supName
      type: object
      properties:
        supId:
          type: integer
          description: The supplier's ID
          format: int32
          example: 111
        supName:
          maxLength: 100
          type: string
          description: The supplier's name
          example: Cogefar
        supAddress:
          maxLength: 150
          type: string
          description: The supplier's address
          example: "25 Rue Ministre, Dschang"
        supTaxcode:
          maxLength: 50
          type: string
          description: The supplier's tax code
          example: "5221"
        supPhone:
          maxLength: 20
          type: string
          description: The supplier's phone
          example: +237654120145
        supFax:
          maxLength: 20
          type: string
          description: The supplier's fax number
          example: +237654120145
        supEmail:
          maxLength: 100
          type: string
          description: The supplier's e-mail address
          example: suplier@sample.com
        supNote:
          maxLength: 200
          type: string
          description: The supplier's notes
    PricesOthersDTO:
      required:
      - code
      - daily
      - description
      - ipdInclude
      - opdInclude
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          maxLength: 10
          type: string
          description: The prices code
          example: PRICES001
        description:
          maxLength: 100
          type: string
          description: The description
        opdInclude:
          type: boolean
        ipdInclude:
          type: boolean
        daily:
          type: boolean
        discharge:
          type: boolean
        undefined:
          type: boolean
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a price others
    PriceListDTO:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          maxLength: 7
          type: string
          description: The price list code
          example: LISTE1
        name:
          maxLength: 50
          type: string
          description: The name of the price list
          example: default price list
        description:
          maxLength: 100
          type: string
          description: The price list description
          example: default price list
        currency:
          maxLength: 10
          type: string
          description: The currency
          example: FCFA
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a price list
    PregnantTreatmentTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The code
        description:
          maxLength: 50
          type: string
          description: The description
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a pregnant treatment type
    PermissionDTO:
      required:
      - description
      - id
      - userGroupIds
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
          description: The permission id
          format: int32
        description:
          maxLength: 255
          type: string
          description: The permission description
        userGroupIds:
          type: array
          description: The user group id
          items:
            type: string
            description: The user group id
    PatientVaccineDTO:
      required:
      - patient
      - progr
      - vaccine
      - vaccineDate
      type: object
      properties:
        code:
          type: integer
          format: int32
        progr:
          type: integer
          description: A progr. in year
          format: int32
          example: 1
        vaccineDate:
          type: string
          description: The vaccine date
        patient:
          $ref: '#/components/schemas/PatientDTO'
        vaccine:
          $ref: '#/components/schemas/VaccineDTO'
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        hashCode:
          type: integer
          format: int32
          readOnly: true
    PatientConsensusDTO:
      required:
      - patientId
      type: object
      properties:
        consensusFlag:
          type: boolean
          description: Consensus flag
        serviceFlag:
          type: boolean
          description: Service flag
        patientId:
          type: integer
          description: Patient id
          format: int32
      description: Class representing a patient consensus
    OperationTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 2
          type: string
          description: The operation code
        description:
          maxLength: 50
          type: string
          description: The operation type
    OperationDTO:
      required:
      - code
      - description
      - major
      - type
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: The code of operation
        description:
          maxLength: 50
          type: string
          description: The operation description
        type:
          $ref: '#/components/schemas/OperationTypeDTO'
        major:
          type: integer
          description: The operation major
          format: int32
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    AdmissionDTO:
      required:
      - admDate
      - admitted
      - deleted
      - type
      type: object
      properties:
        id:
          type: integer
          description: Admission key
          format: int32
          example: 12
        admitted:
          type: integer
          description: If admitted or not
          format: int32
          example: 0
        type:
          type: string
          description: Type of admission
          example: "N"
        ward:
          $ref: '#/components/schemas/WardDTO'
        patient:
          $ref: '#/components/schemas/PatientDTO'
        admDate:
          type: string
          description: Admission date
        admType:
          $ref: '#/components/schemas/AdmissionTypeDTO'
        diseaseIn:
          $ref: '#/components/schemas/DiseaseDTO'
        diseaseOut1:
          $ref: '#/components/schemas/DiseaseDTO'
        diseaseOut2:
          $ref: '#/components/schemas/DiseaseDTO'
        diseaseOut3:
          $ref: '#/components/schemas/DiseaseDTO'
        operation:
          $ref: '#/components/schemas/OperationDTO'
        opDate:
          type: string
          description: Operation date
        opResult:
          type: string
          description: 'Operation result value is ''P'' or ''N'' '
          example: "N"
        disDate:
          type: string
          description: Discharge date
        disType:
          $ref: '#/components/schemas/DischargeTypeDTO'
        note:
          maxLength: 65535
          type: string
          description: Free note
        transUnit:
          type: number
          description: Transfusional unit
          format: float
        visitDate:
          type: string
          description: Visit date
        pregTreatmentType:
          $ref: '#/components/schemas/PregnantTreatmentTypeDTO'
        deliveryDate:
          type: string
          description: Delivery date
        deliveryType:
          $ref: '#/components/schemas/DeliveryTypeDTO'
        deliveryResult:
          $ref: '#/components/schemas/DeliveryResultTypeDTO'
        weight:
          type: number
          description: Weight
          format: float
        ctrlDate1:
          type: string
          format: date-time
        ctrlDate2:
          type: string
          format: date-time
        abortDate:
          type: string
          format: date-time
        userID:
          type: string
          description: User id
        hashCode:
          type: integer
          format: int32
          readOnly: true
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        deleted:
          type: string
          description: "Flag record deleted, values are 'Y' OR 'N' "
          example: "N"
        yprog:
          type: integer
          format: int32
        fhu:
          type: string
      description: The admission
    AdmissionTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the admission type
          example: A
        description:
          maxLength: 50
          type: string
          description: Description of the admission type
          example: AMBULANCE
      description: Admission type
    BillDTO:
      required:
      - amount
      - balance
      - date
      - listName
      - patName
      - patientTrue
      - status
      - update
      - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        patient:
          $ref: '#/components/schemas/PatientDTO'
        listId:
          type: integer
          format: int32
        date:
          type: string
          description: Date of bill creation
          example: 2020-03-19T14:58:00.000Z
        update:
          type: string
          description: Date of bill updated
          example: 2020-03-19T14:58:00.000Z
        listName:
          maxLength: 50
          type: string
          description: Price list name
          example: Basic
        patientTrue:
          type: boolean
          description: Is bill belongs to a patient?
          example: true
        patName:
          maxLength: 100
          type: string
          description: Patient name
          example: Mario Rossi
        status:
          type: string
          description: Bill status
          example: O
        amount:
          type: number
          description: Bill Amount
          format: double
          example: 1000
        balance:
          type: number
          description: Bill balance
          format: double
          example: 1500
        user:
          type: string
          description: user name who create the bill
          example: admin
        list:
          type: boolean
      description: Class representing a bill
    DeliveryResultTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the delivery result type
          example: M
        description:
          maxLength: 50
          type: string
          description: Description of the delivery result type
          example: MORTALITÉ MATERNELLE
      description: Delivery result type
    DeliveryTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the delivery type
          example: "N"
        description:
          maxLength: 50
          type: string
          description: Description of the delivery type
          example: ACCOUCHEMENT NORMAL
      description: Delivery type
    DischargeTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          type: string
          description: Code of the discharge type
          example: SN
        description:
          maxLength: 50
          type: string
          description: Description of the discharge type
          example: SORTIE NORMALE
      description: DisChargeType
    DiseaseDTO:
      required:
      - code
      - description
      - diseaseType
      - ipdInInclude
      - ipdOutInclude
      - opdInclude
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Disease code
          example: "99"
        description:
          maxLength: 50
          type: string
          description: Disease description
        diseaseType:
          $ref: '#/components/schemas/DiseaseTypeDTO'
        opdInclude:
          type: boolean
          description: Indicates whether the disease is an OPD disease
          example: true
        ipdInInclude:
          type: boolean
          description: Indicates whether the disease is an IPD-IN disease
          example: true
        ipdOutInclude:
          type: boolean
          description: Indicates whether the disease is an IPD-OUT disease
          example: true
        hashCode:
          type: integer
          format: int32
          readOnly: true
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Class representing a disease
    DiseaseTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 2
          type: string
          description: Disease type code
        description:
          maxLength: 110
          type: string
          description: Disease type description
      description: Class representing a disease type
    OpdDTO:
      required:
      - age
      - newPatient
      - note
      - sex
      - ward
      type: object
      properties:
        code:
          type: integer
          description: The code of the opd
          format: int32
          example: 3
        date:
          type: string
          description: The date of the admission
        nextVisitDate:
          type: string
          description: The next visit date
        patientCode:
          type: integer
          description: The admitted patient code
          format: int32
        age:
          type: integer
          description: The patient age
          format: int32
          example: 18
        sex:
          type: string
          description: The patient sex
          example: M
        patientName:
          type: string
          description: The patient sex
          example: M
        ageType:
          type: string
          description: Age type
          example: "null"
        note:
          maxLength: 65535
          type: string
          description: The admission note
          example: this is out patient
        prog_year:
          type: integer
          description: A progr. in year for each ward
          format: int32
          example: 18
        disease:
          $ref: '#/components/schemas/DiseaseDTO'
        disease2:
          $ref: '#/components/schemas/DiseaseDTO'
        disease3:
          $ref: '#/components/schemas/DiseaseDTO'
        newPatient:
          type: string
          description: New(N) or Reattendance(R) patient
          example: "N"
        referralFrom:
          type: string
          description: Referral from another unit
          example: R
        referralTo:
          type: string
          description: Referral to another unit
          example: R
        userID:
          type: string
          description: User id
        lock:
          type: integer
          format: int32
          readOnly: true
        hashCode:
          type: integer
          format: int32
          readOnly: true
        reason:
          type: string
          description: Reasons for entry
        anamnesis:
          type: string
          description: History of a medical or psychiatric patient
        allergies:
          type: string
          description: Allergies of patient
        therapies:
          type: string
          description: Current therapies
        prescription:
          maxLength: 255
          type: string
          description: Prescription
        ward:
          $ref: '#/components/schemas/WardDTO'
      description: The opd
    OperationRowDTO:
      required:
      - opDate
      - opResult
      - operation
      - prescriber
      type: object
      properties:
        id:
          type: integer
          format: int32
        operation:
          $ref: '#/components/schemas/OperationDTO'
        prescriber:
          maxLength: 150
          type: string
          description: The presciber of the operation
        opResult:
          maxLength: 250
          type: string
          description: The result of the operation
        opDate:
          type: string
          description: Operation registration date
        remarks:
          maxLength: 250
          type: string
          description: The remark of the operation
        admission:
          $ref: '#/components/schemas/AdmissionDTO'
        opd:
          $ref: '#/components/schemas/OpdDTO'
        bill:
          $ref: '#/components/schemas/BillDTO'
        transUnit:
          type: number
          description: The transunit
          format: float
        hashCode:
          type: integer
          format: int32
          readOnly: true
    OpdWithOperationRowDTO:
      type: object
      properties:
        opdDTO:
          $ref: '#/components/schemas/OpdDTO'
        operationRows:
          type: array
          items:
            $ref: '#/components/schemas/OperationRowDTO'
    MovementTypeDTO:
      required:
      - code
      - description
      - type
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Code of the movement type
          example: D
        description:
          maxLength: 50
          type: string
          description: Description of the movement type
          example: Damage
        type:
          type: string
          description: Type of the movement type
          example: "-"
    MedicalTypeDTO:
      required:
      - code
      - description
      type: object
      properties:
        code:
          maxLength: 1
          type: string
          description: Code of the medical type
          example: M
        description:
          maxLength: 30
          type: string
          description: Description of the medical type
          example: Medical material
    MedicalDTO:
      type: object
      properties:
        code:
          maxLength: 5
          type: integer
          description: The id of the medical
          format: int32
          example: 1
        prod_code:
          type: string
          description: The product code
          example: PARA
        type:
          $ref: '#/components/schemas/MedicalTypeDTO'
        description:
          maxLength: 100
          type: string
          description: The description of the medical
          example: Paracétamol
        initialqty:
          type: number
          description: The initial quantity of the medical
          format: double
          example: 21
        pcsperpck:
          type: integer
          description: The number of pieces per packet
          format: int32
          example: 100
        inqty:
          type: number
          description: The input quantity of the medical
          format: double
          example: 340
        outqty:
          type: number
          description: The out quantity of the medical
          format: double
          example: 8
        minqty:
          type: number
          description: The min quantity of the medical
          format: double
          example: 15
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    MalnutritionDTO:
      required:
      - admission
      - dateSupp
      - height
      - weight
      type: object
      properties:
        code:
          type: integer
          description: The code malnutrition control
          format: int32
          example: 1
        dateSupp:
          type: string
          description: The date of this malnutrition control
          example: 1979-05-01T11:20:33
        dateConf:
          type: string
          description: The date of the next malnutrition control
          example: 1979-05-01T11:20:33
        admission:
          $ref: '#/components/schemas/AdmissionDTO'
        height:
          type: number
          description: The height of the patient
          format: float
          example: 165
        weight:
          type: number
          description: The weight of the patient
          format: float
          example: 65
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    ExamDTO:
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Exam Code
          example: "01.01"
        description:
          maxLength: 100
          type: string
          description: Exam Description
          example: 1.1 HB
        procedure:
          type: integer
          description: Exam Procedure
          format: int32
          example: 1
        defaultResult:
          maxLength: 50
          type: string
          description: Exam Default Result
          example: '>=12 (NORMAL)'
        examtype:
          $ref: '#/components/schemas/ExamTypeDTO'
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
      description: Laboratory Exam
    ExamTypeDTO:
      type: object
      properties:
        code:
          type: string
          description: Exam Type Code
          example: HB
        description:
          maxLength: 50
          type: string
          description: Exam Type Description
          example: 1.Haematology
      description: Exam Type
    LabWithRowsDTO:
      type: object
      properties:
        laboratoryDTO:
          $ref: '#/components/schemas/LaboratoryDTO'
        laboratoryRowList:
          type: array
          items:
            type: string
    LaboratoryDTO:
      type: object
      properties:
        code:
          type: integer
          description: Laboratory Code
          format: int32
        material:
          type: string
          description: Laboratory Material
          example: Blood
        exam:
          $ref: '#/components/schemas/ExamDTO'
        registrationDate:
          type: string
          description: Laboratory Registration Date
        labDate:
          type: string
          description: Laboratory Exam Date
        result:
          type: string
          description: Laboratory Result
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
        note:
          maxLength: 255
          type: string
          description: Laboratory Note
          example: Note by laboratorist
        patientCode:
          type: integer
          description: Laboratory Patient Code
          format: int32
        patName:
          type: string
          description: Laboratory Patient Name
        inOutPatient:
          type: string
          description: Laboratory Patient InOut
          example: "0"
          enum:
          - I
          - O
        age:
          type: integer
          description: Laboratory Patient Age
          format: int32
        sex:
          type: string
          description: Laboratory Patient Sex
          example: M
        status:
          type: string
          description: Laboratory status
          example: DRAFT
          enum:
          - draft
          - open
          - done
          - invalid
          - deleted
    HospitalDTO:
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Hospital Code
          example: STLUKE
        description:
          maxLength: 255
          type: string
          description: Hospital Description
          example: St. Luke HOSPITAL - Angal
        address:
          maxLength: 255
          type: string
          description: Hospital Address
          example: Hospital Address
        city:
          maxLength: 255
          type: string
          description: Hospital City
          example: Hospital City
        telephone:
          maxLength: 50
          type: string
          description: Hospital Telephone
          example: +123 0123456789
        fax:
          maxLength: 50
          type: string
          description: Hospital Fax
          example: +123 0123456789
        email:
          maxLength: 50
          type: string
          description: Hospital Email
          example: hospital@isf.email.xx
        currencyCod:
          maxLength: 3
          type: string
          description: Hospital Currency Cod
          example: EUR
        lock:
          type: integer
          description: Lock
          format: int32
          example: 0
    PatientExaminationDTO:
      required:
      - patientCode
      - pex_date
      type: object
      properties:
        pex_ID:
          type: integer
          description: Patient Examination Id
          format: int32
          example: 1
        pex_date:
          type: string
          description: Date of Patient Examination
          example: 2020-03-19T14:58:00.000Z
        patientCode:
          type: integer
          description: Patient Examination Code
          format: int32
        pex_height:
          type: integer
          description: Patient Height in cm
          format: int32
        pex_weight:
          type: number
          description: Patient Weight in Kg
          format: double
        pex_ap_min:
          type: integer
          description: Blood Pressure MIN in mmHg
          format: int32
        pex_ap_max:
          type: integer
          description: Blood Pressure MAX in mmHg
          format: int32
        pex_rr:
          type: integer
          description: Respiratory Rate in bpm
          format: int32
        pex_temp:
          type: number
          description: Patient Temperature in °C
          format: double
        pex_sat:
          type: number
          description: Patient Saturation in %
          format: double
        pex_hr:
          type: integer
          description: Heart Rate in Apm
          format: int32
        pex_auscultation:
          type: string
          description: Patient ausculation
          example: normal
          enum:
          - normal
          - wheezes
          - rhonchi
          - crackles
          - stridor
          - bronchial
        pex_hgt:
          type: integer
          description: Hemo Glucose Test
          format: int32
        pex_diuresis:
          type: integer
          description: Daily urine Volume in ml
          format: int32
        pex_diuresis_desc:
          type: string
          description: Diuresis description
          example: physiological
          enum:
          - physiological
          - oliguria
          - anuria
          - frequent
          - nocturia
          - stranguria
          - hematuria
          - pyuria
        pex_note:
          maxLength: 2000
          type: string
          description: Examination Note
        pex_bowel_desc:
          type: string
          description: Bowel Function
          example: regular
          enum:
          - constipation
          - regular
          - diarrheal
          - irregular
    BillItemsDTO:
      required:
      - itemAmount
      - itemDescription
      - itemDisplayCode
      - itemId
      - itemQuantity
      - priceId
      type: object
      properties:
        id:
          type: integer
          format: int32
        billId:
          type: integer
          description: Bill id
          format: int32
        priceId:
          type: string
          description: The price Id
          example: "104"
        itemDescription:
          type: string
          description: Item description
          example: Acetone 99 % 1ltr
        itemAmount:
          type: number
          description: Item amount
          format: double
          example: 1000
        itemQuantity:
          type: integer
          description: Item quantity
          format: int32
          example: 1
        itemDisplayCode:
          type: string
          description: Item display code
          example: Acetone
        itemId:
          type: string
          description: Item id
          example: "3"
        hashCode:
          type: integer
          format: int32
          readOnly: true
        price:
          type: boolean
      description: Class representing a billItem
    BillPaymentsDTO:
      required:
      - amount
      - billId
      - date
      - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        billId:
          type: integer
          description: Bill id
          format: int32
        date:
          type: string
          description: Date of payment
          format: date-time
          example: 2020-03-19T14:58:00Z
        amount:
          type: number
          description: The payment amount
          format: double
          example: 500
        user:
          type: string
          description: The current user
          example: admin
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a billPayment
    FullBillDTO:
      required:
      - bill
      - billItems
      type: object
      properties:
        bill:
          $ref: '#/components/schemas/BillDTO'
        billItems:
          type: array
          description: List of bill items elements
          items:
            $ref: '#/components/schemas/BillItemsDTO'
        billPayments:
          type: array
          description: List of bill payments elements
          items:
            $ref: '#/components/schemas/BillPaymentsDTO'
    AgeTypeDTO:
      required:
      - description
      - from
      - to
      type: object
      properties:
        code:
          type: string
          description: Age type code
        description:
          maxLength: 100
          type: string
          description: Age type description
        from:
          type: integer
          description: The minimum value of the range
          format: int32
          example: 0
        to:
          type: integer
          description: The maximum value of the range
          format: int32
          example: 0
      description: Class representing an age type which is typically a range
    UserSettingDTO:
      required:
      - configName
      - configValue
      - id
      type: object
      properties:
        id:
          type: integer
          description: The id of the setting (must be unique)
          format: int32
          example: 1
        configName:
          maxLength: 50
          type: string
          description: The the name of the setting
          example: dashboard
        configValue:
          maxLength: 65535
          type: string
          description: The the value of the user
    UserMenuItemDTO:
      required:
      - altLabel
      - buttonLabel
      - code
      - myClass
      - mySubmenu
      - position
      type: object
      properties:
        code:
          maxLength: 50
          type: string
          description: Code of the menu item (must be unique)
          example: admtype
        buttonLabel:
          maxLength: 50
          type: string
          description: Button label of the menu item
          example: Admission Type
        altLabel:
          maxLength: 50
          type: string
          description: Alt label of the menu item
          example: Admission Type
        tooltip:
          maxLength: 100
          type: string
          description: Tooltip label of the menu item
          example: Admission Type
        shortcut:
          type: string
          description: Shortcut of the menu item
          example: A
        mySubmenu:
          maxLength: 50
          type: string
          description: Parent submenu of the menu item
          example: types
        myClass:
          maxLength: 100
          type: string
          description: The main window class associated
          example: org.isf.admtype.gui.AdmissionTypeBrowser
        position:
          type: integer
          description: Position of the menu item
          format: int32
          example: 5
        asubMenu:
          type: boolean
    TherapyRowDTO:
      required:
      - endDate
      - freqInDay
      - freqInPeriod
      - medicalId
      - notifyInt
      - patID
      - qty
      - smsInt
      - startDate
      - unitID
      type: object
      properties:
        therapyID:
          type: integer
          description: The therapy's ID
          format: int32
          example: 1
        patID:
          $ref: '#/components/schemas/PatientDTO'
        startDate:
          type: string
          description: The start date of therapy
          format: date-time
        endDate:
          type: string
          description: The end date of the therapy
          format: date-time
        medicalId:
          type: integer
          description: The ID of the medical concerned by the therapy
          format: int32
          example: 1
        qty:
          type: number
          description: The quantity of medicals
          format: double
          example: 48
        unitID:
          type: integer
          description: The unit's ID
          format: int32
          example: 1
        freqInDay:
          type: integer
          description: The frequency in day
          format: int32
          example: 2
        freqInPeriod:
          type: integer
          description: The frequency in period
          format: int32
          example: 1
        note:
          maxLength: 65535
          type: string
          description: A note for the therapy
          example: Sample note
        notifyInt:
          type: integer
          description: "the notify flag: 1 if the notification need to be activated,\
            \ 0 otherwise"
          format: int32
          example: 0
        smsInt:
          type: integer
          description: "The sms flag: 1 if sms need to be sent to patient, 0 otherwise"
          format: int32
          example: 0
    Patient:
      required:
      - age
      - birthDate
      - bloodType
      - city
      - deleted
      - fatherName
      - firstName
      - motherName
      - name
      - secondName
      - sex
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        code:
          type: integer
          format: int32
        firstName:
          type: string
        secondName:
          type: string
        name:
          type: string
        birthDate:
          type: string
          format: date
        age:
          type: integer
          format: int32
        agetype:
          type: string
        sex:
          type: string
        address:
          type: string
        city:
          type: string
        nextKin:
          type: string
        telephone:
          type: string
        note:
          type: string
        motherName:
          type: string
        mother:
          type: string
        fatherName:
          type: string
        father:
          type: string
        bloodType:
          type: string
        hasInsurance:
          type: string
        parentTogether:
          type: string
        taxCode:
          type: string
        maritalStatus:
          type: string
        profession:
          type: string
        deleted:
          type: string
        anamnesis:
          type: string
        allergies:
          type: string
        lock:
          type: integer
          format: int32
        patientProfilePhoto:
          $ref: '#/components/schemas/PatientProfilePhoto'
        patientConsensus:
          $ref: '#/components/schemas/PatientConsensus'
        informations:
          type: string
        searchString:
          type: string
    PatientConsensus:
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        consensusFlag:
          type: boolean
        serviceFlag:
          type: boolean
        patient:
          $ref: '#/components/schemas/Patient'
    PatientProfilePhoto:
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/Patient'
        photo:
          type: array
          items:
            type: string
            format: byte
        photoAsImage:
          type: object
          properties:
            accelerationPriority:
              type: number
              format: float
            graphics:
              type: object
              properties:
                color:
                  type: object
                  properties:
                    red:
                      type: integer
                      format: int32
                    green:
                      type: integer
                      format: int32
                    blue:
                      type: integer
                      format: int32
                    alpha:
                      type: integer
                      format: int32
                    rgb:
                      type: integer
                      format: int32
                    transparency:
                      type: integer
                      format: int32
                    colorSpace:
                      type: object
                      properties:
                        type:
                          type: integer
                          format: int32
                        numComponents:
                          type: integer
                          format: int32
                        cs_sRGB:
                          type: boolean
                xormode:
                  type: object
                  properties:
                    red:
                      type: integer
                      format: int32
                    green:
                      type: integer
                      format: int32
                    blue:
                      type: integer
                      format: int32
                    alpha:
                      type: integer
                      format: int32
                    rgb:
                      type: integer
                      format: int32
                    transparency:
                      type: integer
                      format: int32
                    colorSpace:
                      type: object
                      properties:
                        type:
                          type: integer
                          format: int32
                        numComponents:
                          type: integer
                          format: int32
                        cs_sRGB:
                          type: boolean
                  writeOnly: true
                font:
                  type: object
                  properties:
                    name:
                      type: string
                    style:
                      type: integer
                      format: int32
                    size:
                      type: integer
                      format: int32
                    family:
                      type: string
                    transform:
                      type: object
                      properties:
                        scaleX:
                          type: number
                          format: double
                        shearY:
                          type: number
                          format: double
                        shearX:
                          type: number
                          format: double
                        scaleY:
                          type: number
                          format: double
                        translateX:
                          type: number
                          format: double
                        translateY:
                          type: number
                          format: double
                        type:
                          type: integer
                          format: int32
                        determinant:
                          type: number
                          format: double
                        toRotation:
                          type: number
                          format: double
                          writeOnly: true
                        toQuadrantRotation:
                          type: integer
                          format: int32
                          writeOnly: true
                        identity:
                          type: boolean
                    psname:
                      type: string
                    fontName:
                      type: string
                    size2D:
                      type: number
                      format: float
                    plain:
                      type: boolean
                    bold:
                      type: boolean
                    italic:
                      type: boolean
                    transformed:
                      type: boolean
                    numGlyphs:
                      type: integer
                      format: int32
                    missingGlyphCode:
                      type: integer
                      format: int32
                    availableAttributes:
                      type: array
                      items:
                        type: object
                    italicAngle:
                      type: number
                      format: float
                    attributes:
                      type: object
                      additionalProperties:
                        type: object
                fontMetrics:
                  type: object
                  properties:
                    font:
                      type: object
                      properties:
                        name:
                          type: string
                        style:
                          type: integer
                          format: int32
                        size:
                          type: integer
                          format: int32
                        family:
                          type: string
                        transform:
                          type: object
                          properties:
                            scaleX:
                              type: number
                              format: double
                            shearY:
                              type: number
                              format: double
                            shearX:
                              type: number
                              format: double
                            scaleY:
                              type: number
                              format: double
                            translateX:
                              type: number
                              format: double
                            translateY:
                              type: number
                              format: double
                            type:
                              type: integer
                              format: int32
                            determinant:
                              type: number
                              format: double
                            toRotation:
                              type: number
                              format: double
                              writeOnly: true
                            toQuadrantRotation:
                              type: integer
                              format: int32
                              writeOnly: true
                            identity:
                              type: boolean
                        psname:
                          type: string
                        fontName:
                          type: string
                        size2D:
                          type: number
                          format: float
                        plain:
                          type: boolean
                        bold:
                          type: boolean
                        italic:
                          type: boolean
                        transformed:
                          type: boolean
                        numGlyphs:
                          type: integer
                          format: int32
                        missingGlyphCode:
                          type: integer
                          format: int32
                        availableAttributes:
                          type: array
                          items:
                            type: object
                        italicAngle:
                          type: number
                          format: float
                        attributes:
                          type: object
                          additionalProperties:
                            type: object
                    ascent:
                      type: integer
                      format: int32
                    descent:
                      type: integer
                      format: int32
                    leading:
                      type: integer
                      format: int32
                    fontRenderContext:
                      type: object
                      properties:
                        antiAliasingHint:
                          type: object
                        fractionalMetricsHint:
                          type: object
                        antiAliased:
                          type: boolean
                        transformType:
                          type: integer
                          format: int32
                        transform:
                          type: object
                          properties:
                            scaleX:
                              type: number
                              format: double
                            shearY:
                              type: number
                              format: double
                            shearX:
                              type: number
                              format: double
                            scaleY:
                              type: number
                              format: double
                            translateX:
                              type: number
                              format: double
                            translateY:
                              type: number
                              format: double
                            type:
                              type: integer
                              format: int32
                            determinant:
                              type: number
                              format: double
                            toRotation:
                              type: number
                              format: double
                              writeOnly: true
                            toQuadrantRotation:
                              type: integer
                              format: int32
                              writeOnly: true
                            identity:
                              type: boolean
                        transformed:
                          type: boolean
                    maxAscent:
                      type: integer
                      format: int32
                    maxDescent:
                      type: integer
                      format: int32
                    maxDecent:
                      type: integer
                      format: int32
                      deprecated: true
                    maxAdvance:
                      type: integer
                      format: int32
                    widths:
                      type: array
                      items:
                        type: integer
                        format: int32
                    height:
                      type: integer
                      format: int32
                clipBounds:
                  type: object
                  properties:
                    x:
                      type: number
                      format: double
                    "y":
                      type: number
                      format: double
                    width:
                      type: number
                      format: double
                    height:
                      type: number
                      format: double
                    size:
                      type: object
                      properties:
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                    bounds2D:
                      type: object
                      properties:
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        empty:
                          type: boolean
                    location:
                      type: object
                      properties:
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                    empty:
                      type: boolean
                    rect:
                      type: object
                      properties:
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        empty:
                          type: boolean
                      writeOnly: true
                    maxX:
                      type: number
                      format: double
                    maxY:
                      type: number
                      format: double
                    centerX:
                      type: number
                      format: double
                    centerY:
                      type: number
                      format: double
                    minX:
                      type: number
                      format: double
                    minY:
                      type: number
                      format: double
                clip:
                  type: object
                  properties:
                    bounds2D:
                      type: object
                      properties:
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        empty:
                          type: boolean
                    bounds:
                      type: object
                      properties:
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        size:
                          type: object
                          properties:
                            width:
                              type: number
                              format: double
                            height:
                              type: number
                              format: double
                        bounds2D:
                          type: object
                          properties:
                            maxX:
                              type: number
                              format: double
                            maxY:
                              type: number
                              format: double
                            centerX:
                              type: number
                              format: double
                            centerY:
                              type: number
                              format: double
                            width:
                              type: number
                              format: double
                            minX:
                              type: number
                              format: double
                            minY:
                              type: number
                              format: double
                            height:
                              type: number
                              format: double
                            x:
                              type: number
                              format: double
                            "y":
                              type: number
                              format: double
                            empty:
                              type: boolean
                        location:
                          type: object
                          properties:
                            x:
                              type: number
                              format: double
                            "y":
                              type: number
                              format: double
                        empty:
                          type: boolean
                        rect:
                          type: object
                          properties:
                            maxX:
                              type: number
                              format: double
                            maxY:
                              type: number
                              format: double
                            centerX:
                              type: number
                              format: double
                            centerY:
                              type: number
                              format: double
                            width:
                              type: number
                              format: double
                            minX:
                              type: number
                              format: double
                            minY:
                              type: number
                              format: double
                            height:
                              type: number
                              format: double
                            x:
                              type: number
                              format: double
                            "y":
                              type: number
                              format: double
                            empty:
                              type: boolean
                          writeOnly: true
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                clipRect:
                  type: object
                  properties:
                    x:
                      type: number
                      format: double
                    "y":
                      type: number
                      format: double
                    width:
                      type: number
                      format: double
                    height:
                      type: number
                      format: double
                    size:
                      type: object
                      properties:
                        width:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                    bounds2D:
                      type: object
                      properties:
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        empty:
                          type: boolean
                    location:
                      type: object
                      properties:
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                    empty:
                      type: boolean
                    rect:
                      type: object
                      properties:
                        maxX:
                          type: number
                          format: double
                        maxY:
                          type: number
                          format: double
                        centerX:
                          type: number
                          format: double
                        centerY:
                          type: number
                          format: double
                        width:
                          type: number
                          format: double
                        minX:
                          type: number
                          format: double
                        minY:
                          type: number
                          format: double
                        height:
                          type: number
                          format: double
                        x:
                          type: number
                          format: double
                        "y":
                          type: number
                          format: double
                        empty:
                          type: boolean
                      writeOnly: true
                    maxX:
                      type: number
                      format: double
                    maxY:
                      type: number
                      format: double
                    centerX:
                      type: number
                      format: double
                    centerY:
                      type: number
                      format: double
                    minX:
                      type: number
                      format: double
                    minY:
                      type: number
                      format: double
                  deprecated: true
            source:
              type: object
    TherapyRow:
      required:
      - endDate
      - freqInDay
      - freqInPeriod
      - medicalId
      - notifyInt
      - patient
      - qty
      - smsInt
      - startDate
      - unitID
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        therapyID:
          type: integer
          format: int32
        patient:
          $ref: '#/components/schemas/Patient'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        medicalId:
          type: integer
          format: int32
        qty:
          type: number
          format: double
        unitID:
          type: integer
          format: int32
        freqInDay:
          type: integer
          format: int32
        freqInPeriod:
          type: integer
          format: int32
        note:
          type: string
        notifyInt:
          type: integer
          format: int32
        smsInt:
          type: integer
          format: int32
        medical:
          type: integer
          format: int32
        notify:
          type: boolean
        sms:
          type: boolean
    TherapyDTO:
      type: object
      properties:
        therapyID:
          type: integer
          description: The therapy's ID
          format: int32
          example: 1
        patID:
          type: integer
          description: The patient's ID
          format: int32
          example: 1
        dates:
          type: array
          description: The dates of the therapy
          example:
          - 2022-01-01T10:00:00
          - 2022-01-02T15:30:00
          items:
            type: string
            description: The dates of the therapy
            format: date-time
        medical:
          $ref: '#/components/schemas/MedicalDTO'
        qty:
          type: number
          description: The quantity of the medical
          format: double
          example: 48
        units:
          type: string
          description: The units
        freqInDay:
          type: integer
          description: The frequency in day
          format: int32
          example: 2
        note:
          maxLength: 65535
          type: string
          description: A note for the therapy
          example: Sample note
        notify:
          type: boolean
          description: "The notify flag: true if the notification need to be activated,\
            \ false otherwise"
          example: false
        sms:
          type: boolean
          description: "The sms flag: true if sms need to be sent to patient, false\
            \ otherwise"
          example: false
    LotDTO:
      required:
      - code
      - dueDate
      - preparationDate
      type: object
      properties:
        code:
          maxLength: 50
          type: string
          description: The lot's code
          example: LT001
        preparationDate:
          type: string
          description: The preparation date
          example: 2020-06-24
        dueDate:
          type: string
          description: The due date
          example: 2021-06-24
        cost:
          type: number
          description: The lot's code
          example: 750
      description: The lot
    MovementDTO:
      required:
      - date
      - medical
      - quantity
      - refNo
      - type
      type: object
      properties:
        code:
          type: integer
          description: The movement code
          format: int32
          example: 1
        medical:
          $ref: '#/components/schemas/MedicalDTO'
        type:
          $ref: '#/components/schemas/MovementTypeDTO'
        ward:
          $ref: '#/components/schemas/WardDTO'
        lot:
          $ref: '#/components/schemas/LotDTO'
        date:
          type: string
          description: The movement date
          example: 2020-06-24
        quantity:
          type: integer
          description: The movement's medical quantity
          format: int32
          example: 50
        supplier:
          $ref: '#/components/schemas/SupplierDTO'
        refNo:
          type: string
          description: The movement reference
          example: MVN152445
    SmsDTO:
      required:
      - module
      - smsDate
      - smsDateSched
      - smsNumber
      - smsText
      - smsUser
      type: object
      properties:
        smsId:
          type: integer
          description: SMS Id
          format: int32
          example: 1
        smsDate:
          type: string
          description: SMS Date
          format: date-time
        smsDateSched:
          type: string
          description: SMS scheduled date
          example: 2020-07-28T00:00:00
        smsNumber:
          maxLength: 45
          type: string
          description: SMS target phone number
          example: +237671302313
        smsText:
          maxLength: 160
          type: string
          description: SMS content text
          example: Hi Mario.
        smsDateSent:
          type: string
          description: SMS sent date
          example: 2020-07-28T00:00:00
        smsUser:
          maxLength: 50
          type: string
          description: SMS user
          example: Rosi
        module:
          maxLength: 45
          type: string
          description: SMS module name
          example: OPD
        moduleID:
          maxLength: 45
          type: string
          description: SMS module Id
    MovementWardDTO:
      required:
      - date
      - description
      - quantity
      - units
      - ward
      type: object
      properties:
        code:
          type: integer
          description: The movement ward's code
          format: int32
          example: 1
        ward:
          $ref: '#/components/schemas/WardDTO'
        date:
          type: string
          description: The movement ward's date
          format: date
          example: 2020-06-07
        patient:
          $ref: '#/components/schemas/PatientDTO'
        age:
          type: integer
          description: The patient's age in case the movement is associated to a patient
          format: int32
          example: 21
        weight:
          type: number
          description: The patient's weight in case the movement is associated to
            a patient
          format: float
          example: 75
        description:
          type: string
          description: The description of the movement
          example: stock transfer from pharmacy to laboratory
        medical:
          $ref: '#/components/schemas/MedicalDTO'
        quantity:
          type: number
          description: The quantity of the medical concerned by the movement
          format: double
          example: 145
        units:
          type: string
          description: The measure's unit of the medical concerned by the movement
          example: pct
        wardTo:
          $ref: '#/components/schemas/WardDTO'
        wardFrom:
          $ref: '#/components/schemas/WardDTO'
    ExamRowDTO:
      type: object
      properties:
        code:
          type: integer
          description: Exam Row Code
          format: int32
          example: 999
        description:
          type: string
          description: Exam Row Code
          example: NEGATIVE
        exam:
          $ref: '#/components/schemas/ExamDTO'
    LoginRequest:
      required:
      - password
      - username
      type: object
      properties:
        username:
          type: string
          description: User Name
          example: admin
        password:
          type: string
          description: Password of user
          example: admin
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: Token
        type:
          type: string
          description: Type of Token
          example: Bearer
        username:
          type: string
          description: User name
          example: admin
      description: Class representing a Login response
    LitePermissionDTO:
      type: object
      properties:
        name:
          type: string
    UserProfileDTO:
      type: object
      properties:
        userName:
          type: string
        permissions:
          type: array
          items:
            type: string
        userGroup:
          $ref: '#/components/schemas/UserGroupDTO'
    PriceDTO:
      required:
      - description
      - group
      - item
      - list
      - price
      type: object
      properties:
        id:
          type: integer
          format: int32
        list:
          $ref: '#/components/schemas/PriceList'
        group:
          type: string
          description: The group
        item:
          maxLength: 10
          type: string
          description: The item name
        description:
          maxLength: 100
          type: string
          description: The description
        price:
          type: number
          description: Price
          format: double
          example: 1500
        editable:
          type: boolean
          readOnly: true
        hashCode:
          type: integer
          format: int32
          readOnly: true
      description: Class representing a prices
    PriceList:
      required:
      - code
      - currency
      - description
      - name
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        description:
          type: string
        currency:
          type: string
      description: The price list
    PageInfoDTO:
      type: object
      properties:
        size:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        nbOfElements:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int64
        totalNbOfElements:
          type: integer
          format: int64
        hasPreviousPage:
          type: boolean
        hasNextPage:
          type: boolean
    PagePatientDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PatientDTO'
        pageInfo:
          $ref: '#/components/schemas/PageInfoDTO'
    PageOpdDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OpdDTO'
        pageInfo:
          $ref: '#/components/schemas/PageInfoDTO'
    MedicalWardDTO:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/MedicalWardIdDTO'
        in_quantity:
          type: number
          description: The in-quantity
          format: float
          example: 150
        out_quantity:
          type: number
          description: The out-quantity
          format: float
          example: 89
    MedicalWardIdDTO:
      required:
      - medical
      - ward
      type: object
      properties:
        ward:
          $ref: '#/components/schemas/WardDTO'
        medical:
          $ref: '#/components/schemas/MedicalDTO'
      description: The medical ward's id
      example: 1
    PageLabWithRowsDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/LabWithRowsDTO'
        pageInfo:
          $ref: '#/components/schemas/PageInfoDTO'
    PagePatientExaminationDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PatientExaminationDTO'
        pageInfo:
          $ref: '#/components/schemas/PageInfoDTO'
    PageAdmissionDTO:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdmissionDTO'
        pageInfo:
          $ref: '#/components/schemas/PageInfoDTO'
    AgeType:
      required:
      - description
      - from
      - to
      type: object
      properties:
        createdBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDate:
          type: string
          format: date-time
        active:
          type: integer
          format: int32
        code:
          type: string
        description:
          type: string
        from:
          type: integer
          format: int32
        to:
          type: integer
          format: int32
    AdmittedPatientDTO:
      type: object
      properties:
        patient:
          $ref: '#/components/schemas/PatientDTO'
        admission:
          $ref: '#/components/schemas/AdmissionDTO'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
